<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="http://localhost:4000/atom.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-07-06T12:33:02+08:00</updated><id>http://localhost:4000/atom.xml</id><title type="html">WeiChang’s diary</title><subtitle>something</subtitle><author><name>Wei Chang</name></author><entry><title type="html">完善網誌：留言區、版權資訊、訪問人數</title><link href="http://localhost:4000/%E5%89%8D%E7%AB%AF/2022/07/05/002-complete/" rel="alternate" type="text/html" title="完善網誌：留言區、版權資訊、訪問人數" /><published>2022-07-05T00:00:00+08:00</published><updated>2022-07-05T00:00:00+08:00</updated><id>http://localhost:4000/%E5%89%8D%E7%AB%AF/2022/07/05/002-complete</id><content type="html" xml:base="http://localhost:4000/%E5%89%8D%E7%AB%AF/2022/07/05/002-complete/">&lt;hr /&gt;
&lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;

&lt;p&gt;續昨天 &lt;a href=&quot;https://zwei-c.github.io/%E5%89%8D%E7%AB%AF/2022/07/04/001-build/&quot;&gt;建置jekyll+Github Page&lt;/a&gt;完成基本設定後，我又參考&lt;a href=&quot;https://ankmak.com/&quot;&gt;Ank’s Blog&lt;/a&gt;、&lt;a href=&quot;https://cynthiachuang.github.io/&quot;&gt;辛西亞的技能樹&lt;/a&gt;等大大的網誌內的教學文，新增一些功能到我的網誌內，讓功能更完善一些。&lt;/p&gt;

&lt;h1 id=&quot;新增版權資料&quot;&gt;新增版權資料&lt;/h1&gt;

&lt;p&gt;參考了&lt;a href=&quot;https://cynthiachuang.github.io/&quot;&gt;辛西亞大大&lt;/a&gt;的&lt;a href=&quot;https://cynthiachuang.github.io/Add-Post-Copyright/&quot;&gt;版權訊息配置&lt;/a&gt;，我這邊做了一些更改，簡單來說就是用jekyll內的UI把自訂的版權信息放到文章底部。&lt;/p&gt;

&lt;h2 id=&quot;開啟版權訊息功能&quot;&gt;開啟版權訊息功能&lt;/h2&gt;

&lt;p&gt;到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/_config_yml&lt;/code&gt; 找到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;post_copyright&lt;/code&gt; 把 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;false&lt;/code&gt; 改成 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;true&lt;/code&gt;，再把版權資訊&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;license&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;license_url&lt;/code&gt;填進去。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;post_copyright:
  enable: true
  license: CC BY-NC-SA 4.0
  license_url: https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;顯示在頁面中的版權資訊則是要到&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_data/languages/default.yml&lt;/code&gt;裡面修改，不過因為我在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/_config_yml&lt;/code&gt;裡面設定的預設語言是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;zh-tw&lt;/code&gt;所以我要找到&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_data/languages/zh-tw.yml&lt;/code&gt;去修改。我覺得原本辛西亞大大寫的內容已經夠好了再去改就有點顯得畫蛇添足，所以這邊直接使用她的範例。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; copyright:
   author: 本文作者
   link: 本文連結
   license_title: 版權聲明
   license_content: &apos;除非另有標注，部落格中所有文章，均採用
     &amp;lt;a href=&quot;%s&quot; rel=&quot;external nofollow&quot; target=&quot;_blank&quot;&amp;gt;%s&amp;lt;/a&amp;gt; 許可協議。
     轉載請標明作者、連結與出處！&apos;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;這樣版權訊息就會出現在文章底部囉!
&lt;img src=&quot;/assets/images/002/1.png&quot; alt=&quot;1&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;版權訊息關閉選項&quot;&gt;版權訊息關閉選項&lt;/h2&gt;

&lt;p&gt;因為辛西亞大大的聲明裡面寫到：「除非另有標注…」，既然寫說另有標注代表可能會有不加訊息的狀況，因此可以加個開關可以決定是否放置版權訊息：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;修改 HTLM 檔
 先回到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_includes/_macro/post.html&lt;/code&gt; 中找到剛剛引入 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;post-copyright.html&lt;/code&gt; 的位置，並在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;include&lt;/code&gt; 外加上條件式。
 在這邊設定了一個名為 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;copyright&lt;/code&gt; 的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flag&lt;/code&gt;，且僅希望在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;copyright&lt;/code&gt; 設定為 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;false&lt;/code&gt; 時才會隱藏該區域；若未設定或設定為 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ture&lt;/code&gt; 時，則正常顯示該區，因此我必須明確寫出它的條件式：&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; + {％ if page.copyright != false ％}
     {％ include _macro/post-copyright.html ％}   
 + {％ endif ％}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ymal 設定
 搞定後，當你某篇文章不放置版權訊息時，就在文章上方的 yaml 區，設定的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;copyright&lt;/code&gt; 的 flag：&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ---
 title: &quot;完善網誌：留言區、版權資訊、訪問人數&quot;
 date: 2022-07-05
 + copyright: false
 ---
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;複製網頁文字時加上網站的作者與網址&quot;&gt;複製網頁文字時，加上網站的作者與網址&lt;/h2&gt;

&lt;p&gt;另外一個是常見的在複製文字的時候會自動加上版權訊息，這個在辛西亞大大的文章中也有教學，我這邊主要做了一點修改(真的是一點XD)，下面將直接實作。&lt;/p&gt;

&lt;p&gt;直接在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_includes/_scripts/pages/post-details.html&lt;/code&gt;裡面新增&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;document.addEventListener(&quot;copy&quot;, function (evt) {
		let text = document.getSelection().function toString() { [native code] }(); //抓取反白區塊的文字。
		if (text.length &amp;gt;= 100) {  //當複製超過一百個字元加上文字。
			text = text + &quot;\n\n&quot; + &quot;=========================================\n&quot; + &quot;你複製整段要幹嘛==?&quot;;
		}
        console.log(text)
		let clipdata = evt.clipboardData || window.clipboardData;
		clipdata.setData(&quot;text&quot;, text); //將剪貼簿的文字改成剛剛產生的text
		evt.preventDefault();
	});
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;成果如圖:
&lt;img src=&quot;/assets/images/002/2.png&quot; alt=&quot;2&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;新增留言區&quot;&gt;新增留言區&lt;/h1&gt;

&lt;p&gt;不論是Blogger、CSDN、IT邦等等網誌都有留言區，除了可以讓網友給作者留言另外最重要的就是&lt;strong&gt;酷&lt;/strong&gt;，在爬了一段時間之後決定使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Valine&lt;/code&gt;來當本網站的留言系統，選擇&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Valine&lt;/code&gt;的原因是因為：輕量化、好部署、可匿名留言、沒廣告，對，最重要的一點就是沒有廣告！對這方面有興趣的朋友可以看Ivan Mak大大的這篇&lt;a href=&quot;https://ankmak.com/tech/2021/03/11/use-valine-as-comments-in-jekyll.html&quot;&gt;在 Jekyll 上使用 Valine 作為評論系統/留言版&lt;/a&gt;這裡寫得比我詳細太多了，我主要也是參考這篇文章完成留言系統架設的，但人生就像OO充滿皺褶，所以這邊除了部署步驟還要額外紀錄一下我遇到的BUG。&lt;/p&gt;

&lt;h2 id=&quot;valine-的安裝和配置&quot;&gt;&lt;a href=&quot;https://valine.js.org/&quot;&gt;Valine&lt;/a&gt; 的安裝和配置&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;Valine 誕生於2017年8月7日，是一款基於LeanCloud的快速、簡潔且高效的無後端評論系統。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;註冊-leancloud&quot;&gt;註冊 &lt;a href=&quot;https://console.leancloud.app/&quot;&gt;leancloud&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;選擇註冊&lt;strong&gt;國際版&lt;/strong&gt;的就好了。&lt;/p&gt;
&lt;h3 id=&quot;appid跟appkey&quot;&gt;AppID跟AppKey&lt;/h3&gt;
&lt;p&gt;進入控制檯點擊左上角創建應用填入應用名稱，選擇&lt;strong&gt;開發版&lt;/strong&gt;即可，然後進到&lt;em&gt;設置/應用憑證&lt;/em&gt;找到並記住你的AppID跟AppKey，等等要用。&lt;img src=&quot;/assets/images/002/4.png&quot; alt=&quot;4&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;新增各個頁面&quot;&gt;新增各個頁面&lt;/h3&gt;
&lt;p&gt;因為我用的next這個模板沒有內建Valine，所以要自己新增各個頁面。&lt;/p&gt;
&lt;h4 id=&quot;新增valinehtm&quot;&gt;新增&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;valine.htm&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_includes_third-party\comments&lt;/code&gt;裡面添加一個文件&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;valine.htm&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{% unless site.duoshuo_shortname
  or site.disqus_shortname
  or site.hypercomments_id
  or site.gentie_productKey
  or site.duoshuo and site.duoshuo.shortname %}
{% if site.valine_comment.enable %}
&amp;lt;script src=&quot;//cdn1.lncld.net/static/js/3.0.4/av-min.js&quot;&amp;gt;&amp;lt;/script&amp;gt; //我自己是沒有下是這行，因為沒有在*中國境內*會404
&amp;lt;script src=&apos;//unpkg.com/valine/dist/Valine.min.js&apos;&amp;gt;&amp;lt;/script&amp;gt; //這個我打包下來放在本地
&amp;lt;script&amp;gt;
    new Valine({
        el: &apos;#comments&apos;,
        app_id: &apos;{{ site.valine_comment.leancloud_appid }}&apos;,   //這裡變量的取值在網站配置文件裡_config.yml
        app_key: &apos;{{ site.valine_comment.leancloud_appkey }}&apos;, //這裡變量的取值在網站配置文件裡_config.yml
        placeholder:&apos;{{ site.valine_comment.placeholder }}&apos;    //這裡變量的取值在網站配置文件裡_config.yml,
        serverURLs: &quot;your_REST_API網址&quot;
    });&amp;lt;/script&amp;gt;
{% endif %}
{% endunless %}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;修改_configyml配置&quot;&gt;修改&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;配置&lt;/h4&gt;

&lt;p&gt;在_config.yml添加變量&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;app_id&lt;/code&gt;，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;app_key&lt;/code&gt;， &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;placeholde&lt;/code&gt;的值，關於取值傳遞到valine.html，是通過jekyll變量構建。
  具體程式碼如下：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;valine_comment:
  enable: true
  # app_id
  leancloud_appid: your_appid
  # app_key
  leancloud_appkey: your_appkey
  # placeholde
  placeholder: &quot;提供您的寶貴意見&quot;,
  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;套用valinehtml&quot;&gt;套用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;valine.html&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;由於前面創建了&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;valine.html&lt;/code&gt;，需要jekyll套用這個html才能夠執行這個頁面的程式碼，使評論框顯示在每篇文章的頁面，需要在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_includes\_third-party\comments\index.html&lt;/code&gt;裡面添加程式碼：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{% include _third-party/comments/valine.html %}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;並在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_includes/_partials/comments.html&lt;/code&gt;裡面插入程式碼：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{% elsif site.valine_comment.enable %}
 &amp;lt;div id=&quot;vcomments&quot;&amp;gt;&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;大功告成&quot;&gt;大功告成?&lt;/h3&gt;
&lt;p&gt;到這邊重載入一下jekyll看一下文章下面應該就會出現評論框了！
&lt;img src=&quot;/assets/images/002/5.png&quot; alt=&quot;5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;你也可以到&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LeanCloud&lt;/code&gt;的&lt;em&gt;數據存儲/結構化數據/Comment&lt;/em&gt;看一下有沒有留言進來。&lt;img src=&quot;/assets/images/002/6.png&quot; alt=&quot;6&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;valine-的擴充&quot;&gt;Valine 的擴充&lt;/h2&gt;

&lt;p&gt;雖然大致上完成了留言系統的建構，但是仍然有些鑑別度跟安全性上的問題還要解決。另外一點就是回覆留言的通知，這個很酷必須要做！&lt;/p&gt;

&lt;h3 id=&quot;回覆通知&quot;&gt;回覆通知&lt;/h3&gt;

&lt;p&gt;我這邊是用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Gmail&lt;/code&gt;來做&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SMTP&lt;/code&gt;的服務系統，因為今年6月之後Google關閉了&lt;del&gt;不安全性行為&lt;/del&gt;也因為把自己的密碼傳到別的網站本身就是一件不好的事，所以我們要申請一個for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Valine&lt;/code&gt;使用的應用程式密碼。&lt;/p&gt;

&lt;h4 id=&quot;生成app專用密碼&quot;&gt;生成APP專用密碼&lt;/h4&gt;

&lt;p&gt;Google 的 App 專用密碼生成網址 : https://myaccount.google.com/apppasswords&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/002/7.png&quot; alt=&quot;7&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;選取應用程式&lt;/strong&gt;和&lt;strong&gt;選取裝置&lt;/strong&gt;都可以任意選，只是方便自己記憶這個密碼是用來作什麼用途。我自己&lt;strong&gt;選取應用程式&lt;/strong&gt;是有乖乖選&lt;strong&gt;郵件&lt;/strong&gt;、&lt;strong&gt;選取裝置&lt;/strong&gt;那邊填上&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Valine&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;之後就會獲得一個16字元的密碼。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/002/8.png&quot; alt=&quot;8&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;設定leancloud&quot;&gt;設定&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LeanCloud&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;雲引擎&lt;/code&gt;/&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WEB&lt;/code&gt;/&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;設置&lt;/code&gt;/&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;添加新變量&lt;/code&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;變量&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;例子&lt;/th&gt;
      &lt;th&gt;說明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;SITE_NAME&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;AnkMak Blog	[必須]&lt;/td&gt;
      &lt;td&gt;網站名稱&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SITE_URL&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;https://ankmak.com	[必須]&lt;/td&gt;
      &lt;td&gt;網站 URL&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SMTP_SERVICE&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Gmail	[必須]&lt;/td&gt;
      &lt;td&gt;SMTP 服務(&lt;a href=&quot;https://nodemailer.com/smtp/well-known/#supported-services&quot;&gt;支援列表&lt;/a&gt;)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SMTP_USER&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;xxx@gmail.com	[必須]&lt;/td&gt;
      &lt;td&gt;Gmail 郵箱名稱&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SMTP_PASS&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;wnxxxxxxxxxxxxkv	[必須]&lt;/td&gt;
      &lt;td&gt;剛才產生的 App 密碼&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SENDER_NAME&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Ank Mak	[必須]&lt;/td&gt;
      &lt;td&gt;寄件人名稱&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SENDER_EMAIL&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;xxx@xxx.xx	[必須]&lt;/td&gt;
      &lt;td&gt;寄件人 Email&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ADMIN_URL&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;https://xxx-xxx.avosapps.us	[建議]&lt;/td&gt;
      &lt;td&gt;自動喚醒服務用(填入剛才創建的雲引擎域名)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;BLOGGER_EMAIL&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;xxx@xxx.xx	[可選]&lt;/td&gt;
      &lt;td&gt;收件 email，默認為 SENDER_EMAIL&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;AKISMET_KEY&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;xxxxxxxx	[可選]&lt;/td&gt;
      &lt;td&gt;Akismet Key 用於垃圾評論檢測，設為 MANUAL_REVIEW 表示開啟人工審核，留空為不使用&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;更多參數的說明可以看Github 上 Valine-Admin 文檔: https://github.com/DesertsP/Valine-Admin&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/002/9.png&quot; alt=&quot;9&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;部署-leancloud-雲引擎&quot;&gt;部署 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LeanCloud&lt;/code&gt; 雲引擎&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;雲引擎&lt;/code&gt;/&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;部署&lt;/code&gt;/&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git部署&lt;/code&gt;/&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;部署&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Git網址填上 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://github.com/DesertsP/Valine-Admin.git&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;直接按部署就好了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/002/10.png&quot; alt=&quot;10&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;alert&quot;&gt;
  這邊可以試一下回復留言，應該可以收到信了。
&lt;/div&gt;

&lt;h4 id=&quot;評論管理&quot;&gt;評論管理&lt;/h4&gt;

&lt;p&gt;要先&lt;strong&gt;註冊管理員&lt;/strong&gt;用於管理信息，註冊網址為 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://雲引擎域名.avosapps.us/sign-up&lt;/code&gt; (可以在部署狀態裡找到)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/002/11.png&quot; alt=&quot;11&quot; /&gt;&lt;/p&gt;

&lt;p&gt;註冊好之後到&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://雲引擎域名.avosapps.us/&lt;/code&gt;登入就可以管理留言了，我是覺得有點雞肋拉哈哈。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/002/12.png&quot; alt=&quot;12&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;定時自動喚醒&quot;&gt;定時自動喚醒&lt;/h4&gt;

&lt;p&gt;由於免費版的雲引擎每天最多運行 18 個小時，而且每半個小時會執行休眠策略，在休眠期間會暫停郵件通知服務，所以我們需要啟動 2 項雲函數定時任務來解決休眠時的問題:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;自動喚醒 : 每半小時執行一次喚醒以防止休眠(先要創建雲引擎域名)&lt;/li&gt;
  &lt;li&gt;漏發郵件檢查 : 每天的固定時間檢查過去 24 小時內漏發的郵件並重發&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以下是我參考AnkMak大大對雲函數的設定:&lt;/p&gt;

&lt;p&gt;選擇 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;self-wake&lt;/code&gt; 雲函數，Cron 表達式為 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0 */30 0-17 * * ?&lt;/code&gt;，表示每天 00:00 到 17:59 ，每隔 30 分鐘訪問雲引擎。(由於國際版使用 UTC-0 時間，即每天早上 8 點到 凌晨 01:59，所以最後一次執行為 01:30)&lt;/p&gt;

&lt;p&gt;選擇 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;resend-mails&lt;/code&gt; 雲函數，Cron 表達式為 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0 0 0-16 * * ?&lt;/code&gt;，表示每天 00:00 到 16:59 內，每小時一次檢查過去 24 小時內漏發的通知郵件並補發。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/002/13.png&quot; alt=&quot;13&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;leancloud-流控問題的解決方法&quot;&gt;LeanCloud 流控問題的解決方法&lt;/h4&gt;

&lt;div class=&quot;alert&quot;&gt;
  “error”:”因流控原因，通过定时任务唤醒体验版实例失败，建议升级至标准版云引擎实例避免休眠 https://url.leanapp.cn/dwAEksv”
&lt;/div&gt;

&lt;p&gt;由於官方有流量控制的問題，所以 LeanCloud 內建的定時任務只適用於當天，隔天早上起床後就會在日誌裡出現定時任務喚醒體驗版實例失敗的訊息:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/002/14.png&quot; alt=&quot;14&quot; /&gt;&lt;/p&gt;

&lt;p&gt;解決思路：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;只要當天登入過一次評論管理系統，定時任務裡的自動喚醒又會正常運作，但流控問題隔天又會發生。所以這種方法就需要每天早上手動的登錄雲引擎的後台，用來激活容器。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;所以我是使用Google的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AppScript&lt;/code&gt;寫一個腳本每30分鐘訪問一次管理介面，使用方法如下：&lt;/p&gt;

&lt;h5 id=&quot;新增appscript專案&quot;&gt;新增&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AppScript&lt;/code&gt;專案&lt;/h5&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/002/15.png&quot; alt=&quot;15&quot; /&gt;&lt;/p&gt;

&lt;p&gt;點選新專案並新增這段程式碼：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function doResponse() {
  var response = UrlFetchApp.fetch(&apos;https://weichang.avosapps.us&apos;); //訪問你的後台連結
  Logger.log(response.getContentText());
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;然後&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;部署&lt;/code&gt;/&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;新增部署作業&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/002/17.png&quot; alt=&quot;17&quot; /&gt;&lt;/p&gt;

&lt;p&gt;點旁邊鬧鐘的圖案新增觸發條件：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/002/16.png&quot; alt=&quot;16&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/002/18.png&quot; alt=&quot;18&quot; /&gt;&lt;/p&gt;

&lt;p&gt;這樣就會每半小時自動訪問一次評論管理系統了!&lt;/p&gt;

&lt;h4 id=&quot;必填欄位設定&quot;&gt;必填欄位設定&lt;/h4&gt;

&lt;p&gt;由於新增了郵件的通知功能，如果留言時不提供郵箱的話就沒用了，因此我把 NickName 和 Email 都設定為必要選項。&lt;/p&gt;

&lt;p&gt;到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_includes\_third-party\comments\valine.htm&lt;/code&gt;  (每個人的目錄位置可能不同)&lt;/p&gt;

&lt;p&gt;在括號行內加入 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;requiredFields: [&apos;nick&apos;,&apos;mail&apos;]&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;new Valine({
          el: &apos;#comments&apos;,
          app_id: &apos;JKnSyYYosilnYSK5qqBw9Ewd-MdYXbMMI&apos;,   
          app_key: &apos;nsxgeLYfEW1x8CBRdAzBbIsU&apos;, 
          placeholder:&apos;提供您的寶貴意見。&apos;,   
          serverURLs: &apos;https://jknsyyyo.api.lncldglobal.com&apos;,
          requiredFields: [&apos;nick&apos;,&apos;mail&apos;],
          verify: true
      });
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;自訂文字&quot;&gt;自訂文字&lt;/h4&gt;
&lt;p&gt;一樣到到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_includes\_third-party\comments\valine.htm&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;script&amp;gt;
	var langName = &quot;tw&quot;,
		langMode = {
			nick: &quot;NickName(必填)&quot;,
			mail: &quot;E-Mail(必填)&quot;,
			link: &quot;Website(http://)&quot;,
			nickFail: &quot;NickName cannot be less than 3 bytes.&quot;,
			mailFail: &quot;Please confirm your email address.&quot;,
			sofa: &quot;No comment yet.&quot;,
			submit: &quot;Submit&quot;,
			reply: &quot;Reply&quot;,
			cancelReply: &quot;Cancel reply&quot;,
			comments: &quot;Comments&quot;,
			cancel: &quot;Cancel&quot;,
			confirm: &quot;Confirm&quot;,
			continue: &quot;Continue&quot;,
			more: &quot;Load More...&quot;,
			preview: &quot;Preview&quot;,
			emoji: &quot;Emoji&quot;,
			expand: &quot;See more....&quot;,
			seconds: &quot;seconds ago&quot;,
			minutes: &quot;minutes ago&quot;,
			hours: &quot;hours ago&quot;,
			days: &quot;days ago&quot;,
			now: &quot;just now&quot;,
			uploading: &quot;Uploading ...&quot;,
			uploadDone: &quot;Upload completed!&quot;,
			busy: &quot;Submit is busy, please wait...&quot;,
			&quot;code-98&quot;: &quot;Valine initialization failed, please check your version of av-min.js.&quot;,
			&quot;code-99&quot;: &quot;Valine initialization failed, Please check the `el` element in the init method.&quot;,
			&quot;code-100&quot;: &quot;Valine initialization failed, Please check your appId and appKey.&quot;,
			&quot;code-140&quot;: &quot;The total number of API calls today has exceeded the development version limit.&quot;,
			&quot;code-401&quot;: &quot;Unauthorized operation, Please check your appId and appKey.&quot;,
			&quot;code-403&quot;: &quot;Access denied by API domain white list, Please check your security domain.&quot;,
		};

	new Valine({
		el: &quot;#comments&quot;,
		app_id: &quot;JKnSyYYosilnYSK5qqBw9Ewd-MdYXbMMI&quot;,
		app_key: &quot;nsxgeLYfEW1x8CBRdAzBbIsU&quot;,
		placeholder: &quot;提供您的寶貴意見。&quot;,
		serverURLs: &quot;https://jknsyyyo.api.lncldglobal.com&quot;,
		requiredFields: [&quot;nick&quot;, &quot;mail&quot;],
		lang: langName,
		langMode: langMode,
		verify: true,
	});
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;因為我覺得英文也滿好看的所以就沒改了，這邊langName不能跟預設&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;zh-CN&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;zh-TW&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;en&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ja&lt;/code&gt;的一樣。&lt;/p&gt;

&lt;p&gt;官方文檔：https://valine.js.org/i18n.html#%E8%87%AA%E5%AE%9A%E4%B9%89%E8%AF%AD%E8%A8%80&lt;/p&gt;

&lt;p&gt;效果如圖：
&lt;img src=&quot;/assets/images/002/19.png&quot; alt=&quot;19&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;頭像設定&quot;&gt;頭像設定&lt;/h4&gt;

&lt;p&gt;Valine 目前是使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Gravatar&lt;/code&gt; 作為留言板的頭像&lt;/p&gt;

&lt;p&gt;到 &lt;a href=&quot;https://en.gravatar.com&quot;&gt;Gravatar&lt;/a&gt; 官網註冊一個帳號並設定頭像，請確定自己註冊時所使用的郵箱，評論時填寫一樣的郵箱便會顯示頭像。&lt;/p&gt;

&lt;h4 id=&quot;其他用戶的頭像&quot;&gt;其他用戶的頭像&lt;/h4&gt;

&lt;p&gt;沒有自定義的郵箱，有以下 7 種默認值可選:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;參數值&lt;/th&gt;
      &lt;th&gt;頭像&lt;/th&gt;
      &lt;th&gt;說明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;空字符串’’&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/14309741/166483491-fe57a3b3-0a53-42f7-b40f-46f397de3561.png&quot; alt=&quot;&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;Gravatar 官方圖形&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;mp&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/14309741/166483577-b27986fd-e849-4a16-8127-7090bcbba86c.png&quot; alt=&quot;&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;神秘人(一個灰白頭像)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;identicon&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/14309741/166483633-47b95aaa-c335-4e8c-a7c3-50cbc4600a71.png&quot; alt=&quot;&quot; /&gt;、&lt;img src=&quot;https://user-images.githubusercontent.com/14309741/166483747-bbae3c87-37cb-4d60-9bef-61b92b2a29d1.png&quot; alt=&quot;&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;抽象幾何圖形(根據郵箱生成)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;monsterid&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/14309741/166483837-1ce5390d-cb62-4684-9c30-9c7af31db27f.png&quot; alt=&quot;&quot; /&gt;、&lt;img src=&quot;https://user-images.githubusercontent.com/14309741/166483898-a6735412-9239-4992-b4be-98b75d12b3a9.png&quot; alt=&quot;&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;小怪物(根據郵箱生成)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;wavatar&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/14309741/166483972-08031ee7-b574-4ae1-b5b4-1e897ec3c677.png&quot; alt=&quot;&quot; /&gt;、&lt;img src=&quot;https://user-images.githubusercontent.com/14309741/166484064-1de5210a-81b9-43af-ac9d-496308072694.png&quot; alt=&quot;&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;用不同面孔和背景組合生成的頭像(根據郵箱生成)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;retro&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/14309741/166484111-215d89a0-61b5-40d6-b3dd-a0c8bcc8fb83.png&quot; alt=&quot;&quot; /&gt;、&lt;img src=&quot;https://user-images.githubusercontent.com/14309741/166484166-bbd2ffa9-d6c2-430a-9df0-86896b014596.png&quot; alt=&quot;&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;八位像素復古頭像(根據郵箱生成)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;robohash&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/14309741/166484293-8f9e1207-3ca7-435f-954d-6c98362fb44c.png&quot; alt=&quot;&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;一種具有不同顏色、面部等的機器人(根據郵箱生成)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;hide&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;不顯示頭像&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;根據個人喜好選擇，這裡我自己選擇了 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;retro&lt;/code&gt; 小怪物作為其他用戶的頭像。&lt;/p&gt;

&lt;p&gt;一樣到到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_includes\_third-party\comments\valine.htm&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;在括號行內加入&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; avatar: &apos;retro&apos;&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;new Valine({
		el: &quot;#comments&quot;,
		app_id: &quot;JKnSyYYosilnYSK5qqBw9Ewd-MdYXbMMI&quot;,
		app_key: &quot;nsxgeLYfEW1x8CBRdAzBbIsU&quot;,
		placeholder: &quot;提供您的寶貴意見。&quot;,
		serverURLs: &quot;https://jknsyyyo.api.lncldglobal.com&quot;,
		requiredFields: [&quot;nick&quot;, &quot;mail&quot;],
		lang: langName,
		langMode: langMode,
		verify: true,
        avatar: &apos;retro&apos;,
	});
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;效果如下：
&lt;img src=&quot;/assets/images/002/20.png&quot; alt=&quot;20&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;垃圾評論檢測&quot;&gt;垃圾評論檢測&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Akismet (Automattic Kismet)是應用廣泛的一個垃圾留言過濾系統，其作者是大名鼎鼎的WordPress 創始人 Matt Mullenweg，Akismet也是WordPress默認安裝的插件，其使用非常廣泛，設計目標便是幫助博客網站來過濾留言Spam。有了Akismet之後，基本上不用擔心垃圾留言的煩惱了。啟用Akismet後，當博客再收到留言會自動將其提交到Akismet並與Akismet上的黑名單進行比對，如果名列該黑名單中，則該條留言會被標記為垃圾評論且不會發布。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5 id=&quot;先到-akismet-官網httpsakismetcomdevelopment註冊一個帳號這裡我-選擇用-gravatar-的帳號登入&quot;&gt;先到 &lt;a href=&quot;https://akismet.com/development/&quot;&gt;akismet 官網(https://akismet.com/development/)&lt;/a&gt;註冊一個帳號，這裡我##### 選擇用 Gravatar 的帳號登入&lt;/h5&gt;
&lt;h5 id=&quot;選擇-developers-plan&quot;&gt;選擇 Developers Plan&lt;/h5&gt;
&lt;h5 id=&quot;取得-akismet-api-key&quot;&gt;取得 AKISMET API KEY&lt;/h5&gt;
&lt;h5 id=&quot;把-akismet-api-key-填入到-leancloud-的-akismet_key-參數裡&quot;&gt;把 AKISMET API KEY 填入到 leancloud 的 AKISMET_KEY 參數裡&lt;/h5&gt;
&lt;h5 id=&quot;重啟部署&quot;&gt;重啟部署&lt;/h5&gt;

&lt;h4 id=&quot;自定义邮件模板&quot;&gt;自定义邮件模板&lt;/h4&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;變量&lt;/th&gt;
      &lt;th&gt;範本&lt;/th&gt;
      &lt;th&gt;說明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;MAIL_SUBJECT&lt;/td&gt;
      &lt;td&gt;${PARENT_NICK}，您在 ${SITE_NAME} 上的評論收到了回覆	[可選]&lt;/td&gt;
      &lt;td&gt;@回覆時郵件標題&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MAIL_TEMPLATE&lt;/td&gt;
      &lt;td&gt;見下文	[可選]&lt;/td&gt;
      &lt;td&gt;@回覆時郵件內容&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MAIL_SUBJECT_ADMIN&lt;/td&gt;
      &lt;td&gt;${SITE_NAME} 上有新評論了	[可選]&lt;/td&gt;
      &lt;td&gt;博主通知時的郵件標題&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MAIL_TEMPLATE_ADMIN&lt;/td&gt;
      &lt;td&gt;見下文	[可選]&lt;/td&gt;
      &lt;td&gt;博主通知時郵件內容&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;郵件通知分成了兩種:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;通知博主&lt;/li&gt;
  &lt;li&gt;被@通知&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;通知博主&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;div style=&quot;border-top:2px solid #12ADDB;box-shadow:0 1px 3px #AAAAAA;line-height:180%;padding:0 15px 12px;margin:50px auto;font-size:12px;&quot;&amp;gt;&amp;lt;h2 style=&quot;border-bottom:1px solid #DDD;font-size:14px;font-weight:normal;padding:13px 0 10px 8px;&quot;&amp;gt;您在&amp;lt;a style=&quot;text-decoration:none;color: #12ADDB;&quot; href=&quot;${SITE_URL}&quot; target=&quot;_blank&quot;&amp;gt;${SITE_NAME}&amp;lt;/a&amp;gt;上的文章有了新的评论&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;${NICK}&amp;lt;/strong&amp;gt;回复说：&amp;lt;/p&amp;gt;&amp;lt;div style=&quot;background-color: #f5f5f5;padding: 10px 15px;margin:18px 0;word-wrap:break-word;&quot;&amp;gt; ${COMMENT}&amp;lt;/div&amp;gt;&amp;lt;p&amp;gt;您可以点击&amp;lt;a style=&quot;text-decoration:none; color:#12addb&quot; href=&quot;${POST_URL}&quot; target=&quot;_blank&quot;&amp;gt;查看回复的完整內容&amp;lt;/a&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;被@通知 的默認範本&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;div style=&quot;border-top:2px solid #12ADDB;box-shadow:0 1px 3px #AAAAAA;line-height:180%;padding:0 15px 12px;margin:50px auto;font-size:12px;&quot;&amp;gt;&amp;lt;h2 style=&quot;border-bottom:1px solid #DDD;font-size:14px;font-weight:normal;padding:13px 0 10px 8px;&quot;&amp;gt;您在&amp;lt;a style=&quot;text-decoration:none;color: #12ADDB;&quot; href=&quot;${SITE_URL}&quot; target=&quot;_blank&quot;&amp;gt;            ${SITE_NAME}&amp;lt;/a&amp;gt;上的评论有了新的回复&amp;lt;/h2&amp;gt; ${PARENT_NICK} 同学，您曾发表评论：&amp;lt;div style=&quot;padding:0 12px 0 12px;margin-top:18px&quot;&amp;gt;&amp;lt;div style=&quot;background-color: #f5f5f5;padding: 10px 15px;margin:18px 0;word-wrap:break-word;&quot;&amp;gt;            ${PARENT_COMMENT}&amp;lt;/div&amp;gt;&amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;${NICK}&amp;lt;/strong&amp;gt;回复说：&amp;lt;/p&amp;gt;&amp;lt;div style=&quot;background-color: #f5f5f5;padding: 10px 15px;margin:18px 0;word-wrap:break-word;&quot;&amp;gt; ${COMMENT}&amp;lt;/div&amp;gt;&amp;lt;p&amp;gt;您可以点击&amp;lt;a style=&quot;text-decoration:none; color:#12addb&quot; href=&quot;${POST_URL}&quot; target=&quot;_blank&quot;&amp;gt;查看回复的完整內容&amp;lt;/a&amp;gt;，欢迎再次光临&amp;lt;a style=&quot;text-decoration:none; color:#12addb&quot; href=&quot;${SITE_URL}&quot; target=&quot;_blank&quot;&amp;gt;${SITE_NAME}&amp;lt;/a&amp;gt;。&amp;lt;br&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;alert&quot;&gt;
注意，下列變數僅用於郵件範本裡的 HTML 變數中，請勿與雲引擎環境變數混淆
&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;範本裡的變數&lt;/th&gt;
      &lt;th&gt;說明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;SITE_NAME&lt;/td&gt;
      &lt;td&gt;網站名稱&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SITE_URL&lt;/td&gt;
      &lt;td&gt;網站 URL&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;POST_URL&lt;/td&gt;
      &lt;td&gt;文章 URL (完整路徑)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;PARENT_NICK&lt;/td&gt;
      &lt;td&gt;收件人名稱 (被@者、父級評論人)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;PARENT_COMMENT&lt;/td&gt;
      &lt;td&gt;父級評論內容&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;NICK&lt;/td&gt;
      &lt;td&gt;新評論者名稱&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;COMMENT&lt;/td&gt;
      &lt;td&gt;新評論內容&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;我只有把簡體換成繁體而已，我也有把專案fork下來把系統內的部分文字改成繁體的，下面這是我改的版本&lt;/p&gt;

&lt;p&gt;Git:&lt;a href=&quot;https://github.com/zwei-c/Valine-Admin&quot;&gt;https://github.com/zwei-c/Valine-Admin&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;效果如圖:
&lt;img src=&quot;/assets/images/002/21.png&quot; alt=&quot;21&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;瀏覽人數&quot;&gt;瀏覽人數&lt;/h3&gt;

&lt;p&gt;在網站上顯示瀏覽人數是以前玩無名小站覺得很酷的功能，雖然會越用越心寒==&lt;/p&gt;

&lt;p&gt;我是使用 &lt;a href=&quot;http://ibruce.info/2015/04/04/busuanzi/&quot;&gt;不蒜子&lt;/a&gt; 這個js套件：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;顯示站點總訪問量&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;span id=&quot;busuanzi_container_site_pv&quot;&amp;gt;
    本站总访问量&amp;lt;span id=&quot;busuanzi_value_site_pv&quot;&amp;gt;&amp;lt;/span&amp;gt;次
&amp;lt;/span&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;顯示單頁面訪問量&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;span id=&quot;busuanzi_container_page_pv&quot;&amp;gt;
  本文总阅读量&amp;lt;span id=&quot;busuanzi_value_page_pv&quot;&amp;gt;&amp;lt;/span&amp;gt;次
&amp;lt;/span&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;用在jekyll的方法：&lt;/p&gt;

&lt;p&gt;我是放在側邊攔所以直接到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_includes/_custom/sidebar.html&lt;/code&gt;&lt;strong&gt;(不同模板位置可能不同)&lt;/strong&gt;新增&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;script async src=&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&amp;gt;&amp;lt;/script&amp;gt;

本站總訪問量&amp;lt;span id=&quot;busuanzi_value_site_pv&quot;&amp;gt;&amp;lt;/span&amp;gt;次. &amp;lt;br&amp;gt;
本站總訪問人數&amp;lt;span id=&quot;busuanzi_value_site_uv&quot;&amp;gt;&amp;lt;/span&amp;gt;位. &amp;lt;br&amp;gt;
本頁面訪問次數&amp;lt;span id=&quot;busuanzi_value_page_pv&quot;&amp;gt;&amp;lt;/span&amp;gt;次.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;效果如圖:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/002/22.png&quot; alt=&quot;22&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;結論&quot;&gt;結論&lt;/h1&gt;

&lt;p&gt;jekyll這部分的功能更新應該暫時告一段落，先記錄一下待完成(&lt;del&gt;這次搞不定的東西&lt;/del&gt;)的項目：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Appscript沒辦法設定某個時段不跑，這樣會導致某些時間會出現流控問題。&lt;/li&gt;
  &lt;li&gt;文章區分享按鈕&lt;/li&gt;
  &lt;li&gt;訂閱按鈕&lt;/li&gt;
  &lt;li&gt;待補充…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;再來要感謝辛西亞大大、AnkMar大大提供思路跟很完整的實作經驗，其實本篇文章寫的內容基本上都是兩位大大的經驗，我只是將我本身的實作過程記錄下來並加上一些我在實作過程中遇到的bug解決方法，老實說架設網站不難，但是寫網誌真的好難。看起來只要把步驟貼到文章上面就好了，但實際在寫的時候發現有時一些參數或函數、工具的用法說明，說明文件或是前人的文章已經寫得夠好了，搞得我只能把別人的東西Copy&amp;amp;Paste到自己的文章上，有點怪不好意思的。&lt;/p&gt;

&lt;h1 id=&quot;參考資料&quot;&gt;參考資料&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://ankmak.com/tech/2021/03/11/use-valine-as-comments-in-jekyll.html&quot;&gt;在 Jekyll 上使用 Valine 作為評論系統/留言版&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ankmak.com/tech/2022/05/04/valine-admin-setting-and-comments-notification-from-email.html&quot;&gt;Valine Admin 配置教學 - 設定 Valine 作為評論區/留言版並透過 Email 取得留言通知&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://busuanzi.ibruce.info/&quot;&gt;不蒜子&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://valine.js.org/&quot;&gt;Valine&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/DesertsP/Valine-Admin&quot;&gt;Valine-Admin&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cynthiachuang.github.io/Add-Post-Copyright/&quot;&gt;【種樹】新增版權訊息&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cynthiachuang.github.io/Copy-Text-to-Clipboard-and-Append-Source-Hyperlink/&quot;&gt;【種樹】複製網頁文字時，加上網站的作者與網址&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.heson10.com/posts/28396.html&quot;&gt;所有关于Valine评论系统的配置都在这里【合集】&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/jiunian_2761/article/details/97388997&quot;&gt;Hexo博客进阶：为Next主题添加Valine评论系统&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Wei Chang</name></author><category term="前端" /><category term="jekyll" /><category term="Valine" /><category term="App Script" /><summary type="html">前言</summary></entry><entry><title type="html">建置jekyll+Github Page</title><link href="http://localhost:4000/%E5%89%8D%E7%AB%AF/2022/07/04/001-build/" rel="alternate" type="text/html" title="建置jekyll+Github Page" /><published>2022-07-04T00:00:00+08:00</published><updated>2022-07-04T00:00:00+08:00</updated><id>http://localhost:4000/%E5%89%8D%E7%AB%AF/2022/07/04/001-build</id><content type="html" xml:base="http://localhost:4000/%E5%89%8D%E7%AB%AF/2022/07/04/001-build/">&lt;hr /&gt;
&lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;
&lt;p&gt;原本想在將自己遇到的問題或一些程式、讀書心得寫在Blogger裡面，但都要去web上面寫文章。第一不夠酷，第二則覺得有點麻煩。所以藉著有GitHub pages這個service可以用的機會將做一個個人網站這個放在心裡很久的想法實現。&lt;/p&gt;

&lt;h1 id=&quot;使用的工具&quot;&gt;使用的工具&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;GitHub pages&lt;/li&gt;
  &lt;li&gt;Jekyll&lt;/li&gt;
  &lt;li&gt;PowerShell&lt;/li&gt;
  &lt;li&gt;VSCode&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;環境&quot;&gt;環境&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;Windows 10&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;github-pages&quot;&gt;GitHub pages&lt;/h1&gt;
&lt;p&gt;其實我本身寫的code跟上班寫的code都是放在GitLab上，但當我看到GitLab pages的時候已經把這個網站架好了所以沒什麼意外的話應該會繼續使用GitHub pages來當我的個人web site。&lt;/p&gt;

&lt;p&gt;關於GitHub pages其實網路上的教學很多而且都寫得很清楚，所以除了基本的作業流程另外補充一下我自己遇到的問題。&lt;/p&gt;

&lt;h2 id=&quot;initialization&quot;&gt;initialization&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;需要的東西
    &lt;ul&gt;
      &lt;li&gt;GitHub帳號&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;新增名為「username.github.io」的專案，這個 username 指的是自己的 GitHub 帳號。這不僅是你的專案名稱，也是你的 blog 網址。專案成立後，按照 Quick setup 的提示準備好專案的資料夾。&lt;img src=&quot;/assets/images/001/1.png&quot; alt=&quot;1&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Clone下來到本地資料夾，這邊可以先照著GitHub pages 上面的教學create一個index.html然後推上去連接到自己的網站上面看看效果 :)&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;alert&quot;&gt;
  提交之後要過兩三分鐘才會顯示出來，所以不要緊張
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/001/2.png&quot; alt=&quot;2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;到這邊之後GitHub pages基本已經建置完成。如果你有匠人精神可以直接在這邊手刻CSS跟HTML來做網頁，但小弟不才又懶所以接著要使用Jekyll來繼續佈置網站。&lt;/p&gt;

&lt;hr /&gt;
&lt;h1 id=&quot;jekyll&quot;&gt;Jekyll&lt;/h1&gt;

&lt;p&gt;Jekyll 是 Ruby 所編寫出來的 framework，因此在安裝 Jekyll 之前要先安裝Ruby。&lt;/p&gt;

&lt;h2 id=&quot;基本安裝&quot;&gt;基本安裝&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://rubyinstaller.org/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;我是選擇當前最新版本&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ruby+Devkit 3.1.2-1 (x64)&lt;/code&gt;來進行安裝&lt;/p&gt;

&lt;p&gt;根據Jekyll官方文件所述，要使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WITH DEVKIT&lt;/code&gt;的版本來裝。之前沒有仔細看文件直接裝了&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WITHOUT DEVKIT&lt;/code&gt;版本導致後面在裝&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MINGGW&lt;/code&gt;的時候出現一堆error = =&lt;/p&gt;

&lt;p&gt;安裝完成之後直接勾選  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Run &apos;ridk install&apos; to set up MSYS2 ...&lt;/code&gt;。
&lt;img src=&quot;/assets/images/001/4.png&quot; alt=&quot;4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;接著會自動在terminal開啟ruby安裝的介面，這邊他已經幫你key in好選項 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1 3&lt;/code&gt;直接按enter來安裝就好了
&lt;img src=&quot;/assets/images/001/5.png&quot; alt=&quot;5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;看到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Install MSYS2 and MINGW development toolchain succeeded&lt;/code&gt;就代表安裝好了!&lt;/p&gt;

&lt;p&gt;再來在執行&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem install jekyll bundler
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;接下來將專案（e.g. myblog 資料夾）設為 Jekyll 的網站，由於我的專案中已經存在些檔案，所以我在指令的後面加上 force 避免覆蓋。網站設置完時，它會動配置一組預設主題 - minima。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jekyll new myblog  --force 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;到此網站就算建立完成了，若想在上線前預覽建置的結果，可先進入專案進行編譯。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd myblog
jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;編譯結果可在瀏覽器輸入 http://localhost:4000 後查看。若可以順利執行，就將這次的 diff 進行 commit 後送上 github了。&lt;/p&gt;

&lt;p&gt;在這邊我遇到一個BUG&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cannot load such file -- webrick (LoadError)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;根據官方的項目的說明：&lt;/p&gt;

&lt;p&gt;這是因為：
從 Ruby 3.0 開始 webrick 已經不在綁定到 Ruby 中了，&lt;/p&gt;

&lt;p&gt;webrick 需要手動進行添加。&lt;/p&gt;

&lt;p&gt;添加的指令為：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle add webrick
bundle install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;後就可以解決這個問題了。&lt;/p&gt;

&lt;h2 id=&quot;主題更換&quot;&gt;主題更換&lt;/h2&gt;

&lt;h3 id=&quot;挑選主題&quot;&gt;挑選主題&lt;/h3&gt;

&lt;p&gt;網路上搜尋jekyll theme就有很多網站供應jekyll的模板了，我是使用&lt;a href=&quot;http://theme-next.simpleyyt.com/getting-started.html&quot;&gt;jekyll-theme-next&lt;/a&gt;- &lt;a href=&quot;https://simpleyyt.com/jekyll-theme-next/&quot;&gt;demo&lt;/a&gt;這個主題，照著他的步驟：&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/Simpleyyt/jekyll-theme-next.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;我自己是把&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll-theme-next&lt;/code&gt;這個資料夾內除了.git相關的檔案移到剛剛建立的my-blog資料夾內，並刪除&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Gemfile.lock&lt;/code&gt;後執行&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在run&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec jekyll server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;這個時候用瀏覽器訪問&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;localhost:4000&lt;/code&gt;就可以看到&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/001/6.png&quot; alt=&quot;6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;但是看terminal上面會有&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Metadata: No GitHub API authentication could be found&lt;/code&gt;這個報錯，原因很複雜可以自己去估狗一下XD。有個簡單的方法可以解決，到&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;中找到&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;description&lt;/code&gt;給他填上值就OK了!&lt;/p&gt;

&lt;h2 id=&quot;撰寫文章&quot;&gt;撰寫文章&lt;/h2&gt;

&lt;p&gt;終於把環境弄好了，接著可以看該模板內的_posts這個資料夾內的MD檔，把MD檔丟進去jekyll就會把它變成html然後顯示到你的網站上面了，只是要注意MD檔的格式一定要是&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YYYY-MM-DD-name.md&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;並且MD檔的開頭必須是：&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
title: 文章標題
date: 2022-07-04
categories:
- 他可以
tags:
- 穿過
- 我的
- 巴巴
--- 

// 以下開始撰寫你的文章
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;根據我參考的這篇作者表示，不同的模板可能有不同的規範，這部分如果使用不同模板的同學自己留意一下。&lt;/p&gt;

&lt;h1 id=&quot;總結&quot;&gt;總結&lt;/h1&gt;
&lt;p&gt;整個網站包含查資料跟寫這篇文章的時間大概花了4-5小時，但真正build網站大概只花了30分鐘，使用GitHub pages跟jekyll來建置個人網站真的很快又很簡單XD，希望之後有毅力能持續的更新這個網站!&lt;/p&gt;

&lt;h1 id=&quot;參考資料&quot;&gt;參考資料&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://cynthiachuang.github.io/Setting-Up-a-GitHub-Pages-Site-with-Jekyll/&quot;&gt;辛西亞的技能樹- 【種樹】使用 Jekyll 和搭建 Github Pages&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://theme-next.simpleyyt.com/getting-started.html&quot;&gt;NexT使用文檔&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/huyuchengus/p/15473035.html&quot;&gt;Jekyll 运行的时候提示错误 cannot load such file – webrick (LoadError)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jekyllrb.com/&quot;&gt;jekyll官方文檔&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://giselle527.github.io/2018/02/12/problems&quot;&gt;見字如畫 - githubPages+jekyll搭建博客和使用jekyll模板&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/pfysw/article/details/109247846&quot;&gt;搭建msys2基礎開發平台&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Wei Chang</name></author><category term="前端" /><category term="jekyll" /><category term="github" /><category term="ruby" /><summary type="html">前言 原本想在將自己遇到的問題或一些程式、讀書心得寫在Blogger裡面，但都要去web上面寫文章。第一不夠酷，第二則覺得有點麻煩。所以藉著有GitHub pages這個service可以用的機會將做一個個人網站這個放在心裡很久的想法實現。</summary></entry></feed>