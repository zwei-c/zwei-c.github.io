<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="http://localhost:4000/atom.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-07-20T21:09:34+08:00</updated><id>http://localhost:4000/atom.xml</id><title type="html">WeiChang’s diary</title><subtitle>something</subtitle><author><name>Wei Chang</name></author><entry><title type="html">CMAR: Accurate and Efficient Classification Based on Multiple Class-Association Rules</title><link href="http://localhost:4000/stady/2022/07/20/007-CMAR/" rel="alternate" type="text/html" title="CMAR: Accurate and Efficient Classification Based on Multiple Class-Association Rules" /><published>2022-07-20T00:00:00+08:00</published><updated>2022-07-20T00:00:00+08:00</updated><id>http://localhost:4000/stady/2022/07/20/007-CMAR</id><content type="html" xml:base="http://localhost:4000/stady/2022/07/20/007-CMAR/">&lt;h1 id=&quot;作者&quot;&gt;作者&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Wenmin Li&lt;/li&gt;
  &lt;li&gt;Jiawei Han&lt;/li&gt;
  &lt;li&gt;Jian Pei
    &lt;h1 id=&quot;摘要&quot;&gt;摘要&lt;/h1&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;傳統的關聯規則分類(CBA)在處理非結構化資料具有比較高的分類準確度及靈活性。但是在處理大型的資料庫時有問題，且因為基於&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Confidence&lt;/code&gt;來挑選分類規則導致出現過耦合的狀況。&lt;/p&gt;

&lt;p&gt;本篇研究提出一種新的關聯規則分類的方法&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CMAR&lt;/code&gt;其挖掘規則的方法採用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FP-Growth&lt;/code&gt;，並採用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Support&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Confidence&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;相關度&lt;/code&gt;修剪規則，並進行加權分析建構分類器。&lt;/p&gt;

&lt;p&gt;實驗結果表示&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CMAR&lt;/code&gt;與其他分類演算法&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CBA&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C4.5&lt;/code&gt;相比有更好的效率也有更好的分類準確度。&lt;/p&gt;

&lt;h1 id=&quot;方法&quot;&gt;方法&lt;/h1&gt;

&lt;h2 id=&quot;生成fp-tree&quot;&gt;生成FP-tree&lt;/h2&gt;
&lt;p&gt;假設有一組資料
&lt;img src=&quot;/assets/images/007/1.png&quot; alt=&quot;1&quot; /&gt;
循著FP-Growth的作法先定義&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Support threshold&lt;/code&gt;為&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2&lt;/code&gt;且本研究因為要將類別標籤也放入Tree中，所以有定義一&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;confidence threshold&lt;/code&gt;為50%&lt;/p&gt;

&lt;div class=&quot;alert&quot;&gt;
這邊指的Support是表示item在data set中出現的次數。
且在生成樹的時候暫時不會用到confidence。
&lt;/div&gt;

&lt;p&gt;依照&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Support threshold&lt;/code&gt;生成&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;header table&lt;/code&gt;:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;item&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;count&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$a_1$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$b_2$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$c_1$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$d_3$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;根據&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;header table&lt;/code&gt;去除不符合&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Support threshold&lt;/code&gt;的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;item&lt;/code&gt;生成的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;item set&lt;/code&gt;:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;id&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;item&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;class&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$a_1, c_1$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;A&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$a_1, b_2, c_1$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;B&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$d_3$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;A&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$a_1, b_2, d_3$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;C&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$a_1, b_2, c_1, d_3$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;C&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;最後生成出來的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FP-tree&lt;/code&gt;
&lt;img src=&quot;/assets/images/007/2.png&quot; alt=&quot;2&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;從fp-tree提取規則&quot;&gt;從FP-tree提取規則&lt;/h2&gt;

&lt;div class=&quot;alert&quot;&gt;
這裡support表示這筆item包含該屬性值，confidence表示有包含這個屬性值的item且類別與規則相符的次數/有包含這個屬性值的item的總數X100%。
&lt;/div&gt;

&lt;p&gt;依照生成的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FP-tree&lt;/code&gt;來找&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pattern&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;先從 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;d&lt;/code&gt;節點來看(以下為了簡化將各個item去掉下標):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/007/3.png&quot; alt=&quot;3&quot; /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;item&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;count&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$a$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$b$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$d$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;生成的規則：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;$abd \to C, sup=2,conf=100\%$&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;d&lt;/code&gt;節點完成之後要把原本&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;d&lt;/code&gt;節點的類別標籤合併到父節點上，結果如圖:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/007/4.png&quot; alt=&quot;4&quot; /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;item&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;count&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$a$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$b$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$c$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;生成的規則：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;$ac \to A, sup=1,conf=33\%$&lt;/li&gt;
  &lt;li&gt;$abc \to B, sup=1,conf=50\%$&lt;/li&gt;
  &lt;li&gt;$abc \to C, sup=1,conf=50\%$&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;依此類推 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;b&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a&lt;/code&gt;節點&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/007/5.png&quot; alt=&quot;5&quot; /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;item&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;count&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$a$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$b$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;生成的規則：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;$ab \to B, sup=1,conf=33\%$&lt;/li&gt;
  &lt;li&gt;$ab \to C, sup=2,conf=66\%$&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/007/6.png&quot; alt=&quot;6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;生成的規則：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;$a \to A, sup=1,conf=25\%$&lt;/li&gt;
  &lt;li&gt;$a \to B, sup=1,conf=25\%$&lt;/li&gt;
  &lt;li&gt;$a \to C, sup=2,conf=50\%$&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最後由這棵樹生成的規則為下表：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;ID&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Rule&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Support&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Confidece&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$abd \to C$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;100%&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$ab \to C$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;66%&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$a \to C$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;50%&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;rule的排序&quot;&gt;Rule的排序&lt;/h2&gt;

&lt;p&gt;有兩個規則$R_1$、$R_2$，如果:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;$conf(R_1)&amp;gt;conf(R_2)$&lt;/li&gt;
  &lt;li&gt;$conf(R_1)=conf(R_2)\&amp;amp;sup(R_1)&amp;gt;sup(R_2)$&lt;/li&gt;
  &lt;li&gt;$conf(R_1)=conf(R_2)\&amp;amp;sup(R_1)=sup(R_2)$ 但$R_1$的屬性值比$R_2$少&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;這樣就可以說 $R_1$&lt;strong&gt;is having higher rank than&lt;/strong&gt;$R_2$&lt;/p&gt;

&lt;p&gt;另外可以說如果一個規則$R_1:P\to c$是$R_2:P^ˊ\to c^ˊ$的子集合，就可以說$R_1$是$R_2$的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;general rule&lt;/code&gt;。&lt;/p&gt;

&lt;h2 id=&quot;pruning-rule&quot;&gt;Pruning Rule&lt;/h2&gt;

&lt;p&gt;透過剛剛的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;general rule&lt;/code&gt;我們在由規則生成CR-tree的時候進行第一步的Pruning。&lt;/p&gt;

&lt;h3 id=&quot;general-rule&quot;&gt;general rule&lt;/h3&gt;

&lt;p&gt;如果有兩個規則$R_1$、$R_2$，若$R_1$是$R_2$的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;general rule&lt;/code&gt;且$R_1$的rank比$R_2$高就要將$R_2$ pruning掉。這部分是在建構CR-tree時完成。&lt;/p&gt;

&lt;h3 id=&quot;選擇正相關的規則&quot;&gt;選擇正相關的規則&lt;/h3&gt;

&lt;p&gt;假設有一條規則: (support = 30)
&lt;img src=&quot;/assets/images/007/7.png&quot; alt=&quot;7&quot; /&gt;&lt;/p&gt;

&lt;p&gt;實際表格：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/007/8.png&quot; alt=&quot;8&quot; /&gt;&lt;/p&gt;

&lt;p&gt;期望表格:&lt;/p&gt;

&lt;p&gt;$total_no$佔比$=\frac{30}{500} =\frac{3}{50}$&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;$R_1$&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;approved&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;rejected&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;total&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$job=yes$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$450 \times \frac{47}{50}$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$50 \times \frac{47}{50}$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$470$&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$job=no$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$450 \times \frac{3}{50}$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$50 \times \frac{3}{50}$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$30$&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;會等於:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/007/9.png&quot; alt=&quot;9&quot; /&gt;&lt;/p&gt;

&lt;p&gt;套用公式:&lt;/p&gt;

\[job=no \to class=rejected: X^2=\frac{(438-423)^2}{423}+\frac{(47-32)^2}{47}+\frac{(27-12)^2}{27}+\frac{(18-3)^2}{3}\approx88.4\]

&lt;p&gt;若$X^2$沒通過設定的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;significance level threshold&lt;/code&gt;該規則就該pruning掉。&lt;/p&gt;

&lt;h3 id=&quot;selecting-rules-based-on-database-coverage&quot;&gt;Selecting rules based on database coverage&lt;/h3&gt;

&lt;p&gt;計算每個item被rule覆蓋且正確分類的次數:
規則:
|ID|Rule|Support|Confidece|
|:-:|:-:|:-:|:-:|
|1|$abd \to C$|2|100%|
|2|$ab \to C$|2|66%|
|3|$a \to C$|2|50%|&lt;/p&gt;

&lt;p&gt;item set $\to R_1$&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;id&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;item&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;class&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;count&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$a, c$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;A&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$a, b, c$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;B&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$d$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;A&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$a, b, d$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;C&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$a, b, c, d$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;C&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;item set $\to R_2$&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;id&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;item&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;class&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;count&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$a, c$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;A&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$a, b, c$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;B&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$d$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;A&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$a, b, d$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;C&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$a, b, c, d$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;C&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;item set $\to R_3$&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;id&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;item&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;class&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;count&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$a, c$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;A&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$a, b, c$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;B&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$d$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;A&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$a, b, d$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;C&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$a, b, c, d$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;C&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;這邊三條規則都有被select到。最終select到的規則就是我們拿來建構分類器的規則。&lt;/p&gt;

&lt;h2 id=&quot;分類&quot;&gt;分類&lt;/h2&gt;

&lt;p&gt;分類結果分成三類&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;沒有matching rules&lt;/li&gt;
  &lt;li&gt;有一到多條matching rules，但只有對應到一個class。&lt;/li&gt;
  &lt;li&gt;有多條matching rules，有多個class，需要對選到的規則計算累計卡分值決定分為哪一類&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/007/15.png&quot; alt=&quot;15&quot; /&gt;&lt;/p&gt;

&lt;p&gt;計算 &lt;img src=&quot;/assets/images/007/10.png&quot; alt=&quot;10&quot; /&gt; 及 &lt;img src=&quot;/assets/images/007/11.png&quot; alt=&quot;11&quot; /&gt;&lt;/p&gt;

&lt;p&gt;得&lt;/p&gt;

&lt;p&gt;$R_1:job=no\to rejected$的$max^2\approx292.490226288$&lt;/p&gt;

&lt;p&gt;$R_1:job=no\to rejected$的$X^2\approx88.4$&lt;/p&gt;

&lt;p&gt;$R_1:job=no\to rejected$的$weightedX^2\approx0.3022$&lt;/p&gt;

&lt;p&gt;$R_2:education=university\to approved$的$max^2\approx495.84$&lt;/p&gt;

&lt;p&gt;$R_2:education=university\to approved$的$X^2\approx33.4256$&lt;/p&gt;

&lt;p&gt;$R_2:education=university\to approved$的$weightedX^2\approx0.06741$&lt;/p&gt;

&lt;p&gt;如果這邊有一個item符合這兩個&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rule&lt;/code&gt;的話這邊就要選擇$weightedX^2$較高的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;R_1&lt;/code&gt;來分類。&lt;/p&gt;

&lt;h1 id=&quot;結論&quot;&gt;結論&lt;/h1&gt;
&lt;p&gt;與各方法比較的準確度:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/007/12.png&quot; alt=&quot;12&quot; /&gt;&lt;/p&gt;

&lt;p&gt;與各方法比較的記憶體使用量:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/007/13.png&quot; alt=&quot;13&quot; /&gt;&lt;/p&gt;

&lt;p&gt;與各方法比較的運行時間:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/007/14.png&quot; alt=&quot;14&quot; /&gt;&lt;/p&gt;</content><author><name>Wei Chang</name></author><category term="stady" /><category term="CBA" /><category term="Association rule" /><category term="data mining" /><category term="FP-growth" /><summary type="html">作者 Wenmin Li Jiawei Han Jian Pei 摘要 傳統的關聯規則分類(CBA)在處理非結構化資料具有比較高的分類準確度及靈活性。但是在處理大型的資料庫時有問題，且因為基於Confidence來挑選分類規則導致出現過耦合的狀況。 本篇研究提出一種新的關聯規則分類的方法CMAR其挖掘規則的方法採用FP-Growth，並採用Support、Confidence、相關度修剪規則，並進行加權分析建構分類器。 實驗結果表示CMAR與其他分類演算法CBA、C4.5相比有更好的效率也有更好的分類準確度。 方法 生成FP-tree 假設有一組資料 循著FP-Growth的作法先定義Support threshold為2且本研究因為要將類別標籤也放入Tree中，所以有定義一confidence threshold為50% 這邊指的Support是表示item在data set中出現的次數。 且在生成樹的時候暫時不會用到confidence。 依照Support threshold生成header table: item count $a_1$ 4 $b_2$ 3 $c_1$ 3 $d_3$ 3 根據header table去除不符合Support threshold的item生成的item set: id item class 1 $a_1, c_1$ A 2 $a_1, b_2, c_1$ B 3 $d_3$ A 4 $a_1, b_2, d_3$ C 5 $a_1, b_2, c_1, d_3$ C 最後生成出來的FP-tree 從FP-tree提取規則 這裡support表示這筆item包含該屬性值，confidence表示有包含這個屬性值的item且類別與規則相符的次數/有包含這個屬性值的item的總數X100%。 依照生成的FP-tree來找pattern 先從 d節點來看(以下為了簡化將各個item去掉下標): item count $a$ 2 $b$ 2 $d$ 2 生成的規則： $abd \to C, sup=2,conf=100\%$ d節點完成之後要把原本d節點的類別標籤合併到父節點上，結果如圖: item count $a$ 3 $b$ 2 $c$ 3 生成的規則： $ac \to A, sup=1,conf=33\%$ $abc \to B, sup=1,conf=50\%$ $abc \to C, sup=1,conf=50\%$ 依此類推 b、a節點 item count $a$ 3 $b$ 3 生成的規則： $ab \to B, sup=1,conf=33\%$ $ab \to C, sup=2,conf=66\%$ 生成的規則： $a \to A, sup=1,conf=25\%$ $a \to B, sup=1,conf=25\%$ $a \to C, sup=2,conf=50\%$ 最後由這棵樹生成的規則為下表： ID Rule Support Confidece 1 $abd \to C$ 2 100% 2 $ab \to C$ 2 66% 3 $a \to C$ 2 50% Rule的排序 有兩個規則$R_1$、$R_2$，如果: $conf(R_1)&amp;gt;conf(R_2)$ $conf(R_1)=conf(R_2)\&amp;amp;sup(R_1)&amp;gt;sup(R_2)$ $conf(R_1)=conf(R_2)\&amp;amp;sup(R_1)=sup(R_2)$ 但$R_1$的屬性值比$R_2$少 這樣就可以說 $R_1$is having higher rank than$R_2$ 另外可以說如果一個規則$R_1:P\to c$是$R_2:P^ˊ\to c^ˊ$的子集合，就可以說$R_1$是$R_2$的general rule。 Pruning Rule 透過剛剛的general rule我們在由規則生成CR-tree的時候進行第一步的Pruning。 general rule 如果有兩個規則$R_1$、$R_2$，若$R_1$是$R_2$的general rule且$R_1$的rank比$R_2$高就要將$R_2$ pruning掉。這部分是在建構CR-tree時完成。 選擇正相關的規則 假設有一條規則: (support = 30) 實際表格： 期望表格: $total_no$佔比$=\frac{30}{500} =\frac{3}{50}$ $R_1$ approved rejected total $job=yes$ $450 \times \frac{47}{50}$ $50 \times \frac{47}{50}$ $470$ $job=no$ $450 \times \frac{3}{50}$ $50 \times \frac{3}{50}$ $30$ 會等於: 套用公式: \[job=no \to class=rejected: X^2=\frac{(438-423)^2}{423}+\frac{(47-32)^2}{47}+\frac{(27-12)^2}{27}+\frac{(18-3)^2}{3}\approx88.4\] 若$X^2$沒通過設定的significance level threshold該規則就該pruning掉。 Selecting rules based on database coverage 計算每個item被rule覆蓋且正確分類的次數: 規則: |ID|Rule|Support|Confidece| |:-:|:-:|:-:|:-:| |1|$abd \to C$|2|100%| |2|$ab \to C$|2|66%| |3|$a \to C$|2|50%| item set $\to R_1$ id item class count 1 $a, c$ A 0 2 $a, b, c$ B 0 3 $d$ A 0 4 $a, b, d$ C 1 5 $a, b, c, d$ C 1 item set $\to R_2$ id item class count 1 $a, c$ A 0 2 $a, b, c$ B 1 3 $d$ A 0 4 $a, b, d$ C 2 5 $a, b, c, d$ C 2 item set $\to R_3$ id item class count 1 $a, c$ A 1 2 $a, b, c$ B 2 3 $d$ A 0 4 $a, b, d$ C 3 5 $a, b, c, d$ C 3 這邊三條規則都有被select到。最終select到的規則就是我們拿來建構分類器的規則。 分類 分類結果分成三類 沒有matching rules 有一到多條matching rules，但只有對應到一個class。 有多條matching rules，有多個class，需要對選到的規則計算累計卡分值決定分為哪一類 計算 及 得 $R_1:job=no\to rejected$的$max^2\approx292.490226288$ $R_1:job=no\to rejected$的$X^2\approx88.4$ $R_1:job=no\to rejected$的$weightedX^2\approx0.3022$ $R_2:education=university\to approved$的$max^2\approx495.84$ $R_2:education=university\to approved$的$X^2\approx33.4256$ $R_2:education=university\to approved$的$weightedX^2\approx0.06741$ 如果這邊有一個item符合這兩個rule的話這邊就要選擇$weightedX^2$較高的R_1來分類。 結論 與各方法比較的準確度: 與各方法比較的記憶體使用量: 與各方法比較的運行時間:</summary></entry><entry><title type="html">Windows部署Laravel Sail</title><link href="http://localhost:4000/server/2022/07/18/006-laravelsail/" rel="alternate" type="text/html" title="Windows部署Laravel Sail" /><published>2022-07-18T00:00:00+08:00</published><updated>2022-07-18T00:00:00+08:00</updated><id>http://localhost:4000/server/2022/07/18/006-laravelsail</id><content type="html" xml:base="http://localhost:4000/server/2022/07/18/006-laravelsail/">&lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;

&lt;p&gt;  目前在研究各種架設Laravel的方法，經歷了&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Homestead&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;laradock&lt;/code&gt;最終還是走到了一開始最想使用的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Sail&lt;/code&gt;。實際上使用起來跟感受到與&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;laradock&lt;/code&gt;使用有明顯差別，原因是在於&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;laradock&lt;/code&gt;使用的專案資料夾位於windows系統，而&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Laravel Sail&lt;/code&gt;是直接存放於WSL系統內，以筆者為例，開新的laravel專案在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;laradock&lt;/code&gt;開啟&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/&lt;/code&gt;歡迎頁面需要load 1秒的時間而在Sail中大概就只要幾十毫秒，以體感差非常多。剛好在laradock上的案件量不多趁新鮮趕緊換成&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Laravel Sail&lt;/code&gt;來使用，以下將帶來在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Windows 11&lt;/code&gt; 上部屬&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Laravel Sail&lt;/code&gt;的過程。&lt;/p&gt;
&lt;div class=&quot;alert&quot;&gt;
關於laradock在windows上的檔案IO其實是有解的，但我覺得有點麻煩就沒用了。
&lt;/div&gt;

&lt;!-- more --&gt;
&lt;h1 id=&quot;部屬流程&quot;&gt;部屬流程&lt;/h1&gt;
&lt;p&gt;  Sail還是基於Docker的做法，所以依然要安裝Docker，在windows上安裝Docker可以看我&lt;a href=&quot;https://zwei-c.github.io/server/2022/07/07/005-laradock/&quot;&gt;上一篇文章&lt;/a&gt;有介紹。&lt;/p&gt;

&lt;h2 id=&quot;安裝ubuntu&quot;&gt;安裝Ubuntu&lt;/h2&gt;

&lt;p&gt;  打開&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Microsoft Store&lt;/code&gt;搜尋&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ubuntu&lt;/code&gt;我這邊安裝的是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;20.4.4&lt;/code&gt;版
&lt;img src=&quot;/assets/images/006/1.png&quot; alt=&quot;1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;安裝好後要確認WSL版本是不是2，Windows11的話預設就是WSL2了，好了之後要去Dokcer Desktop設定&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Resources&amp;gt;WSL intergration&lt;/code&gt;選取安裝的Linux系統。
&lt;img src=&quot;/assets/images/006/2.png&quot; alt=&quot;2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;好了之後開啟&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Windows終端機&lt;/code&gt;(沒有的話一樣去MSstore裝一裝就好了)。會自動新增剛剛安裝的ubuntu於你的新增標籤內。
&lt;img src=&quot;/assets/images/006/3.png&quot; alt=&quot;3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;開啟Ubuntu後因為如果是舊專案會需要用到composer所以要先安裝PHP，依自己的需求安裝PHP版本及擴展。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#更新apt
sudo apt update &amp;amp;&amp;amp; sudo apt install php

#添加安裝包
sudo apt install software-properties-common
sudo add-apt-repository ppa:ondrej/php

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#安裝php 8.1
sudo apt install php8.1

#安裝php拓展

sudo apt install php8.1-gd php8.1-xml php8.1-soap php8.1-mbstring php8.1-mysql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果有切換php版本的需求可以使用&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo update-alternatives --config php 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;再來安裝composer&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#下載composer安裝檔
wget -O composer-setup.php https://getcomposer.org/installer

#安裝到/usr/local/bin目錄下
sudo php composer-setup.php --install-dir=/usr/local/bin --filename=composer

#查看是否安裝成功
composer -v
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;安裝nginx-proxy-manager&quot;&gt;安裝Nginx-proxy-manager&lt;/h2&gt;
&lt;p&gt;  為了方便設定自己想要的域名，首先進入WSL終端機下，到家目錄新建一個&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;proxy-manager&lt;/code&gt;資料夾。&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd ~ &amp;amp;&amp;amp; mkdir proxy-manager
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;進入proxy-manager文件夾並創建&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker-compose.yml&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd proxy-manager &amp;amp;&amp;amp; vim docker-compose.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;於&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker-composer.yml&lt;/code&gt;文件貼上&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;version: &quot;3&quot;
services:
  app:
    image: &apos;jc21/nginx-proxy-manager:latest&apos;
    restart: always
    ports:
      # Public HTTP Port:
      - &apos;80:80&apos;
      # Public HTTPS Port:
      - &apos;443:443&apos;
      # Admin Web Port:
      - &apos;81:81&apos;
    environment:
      # These are the settings to access your db
      DB_SQLITE_FILE: &quot;/data/database.sqlite&quot;
      # Uncomment this if IPv6 is not enabled on your host
      DISABLE_IPV6: &apos;true&apos;
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;然後啟動container&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker-composer up -d
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;好了之後去瀏覽器進入&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;localhost:81&lt;/code&gt;就可以進到管理員頁面&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Email address: admin@example.com
Password: changeme
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;就可以設定你的帳號。&lt;/p&gt;

&lt;p&gt;設定完成後: &lt;img src=&quot;/assets/images/006/4.png&quot; alt=&quot;4&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;設定laravel-sail&quot;&gt;設定Laravel Sail&lt;/h2&gt;

&lt;p&gt;  分成兩個部分：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;在舊的專案上使用Sail&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;新增新的專案使用Sail&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;這邊先講如果在舊專案上使用Sail。&lt;/p&gt;

&lt;p&gt;首先先進入Ubuntu然後在你的專案底下，使用 composer 安裝 Laravel Sail。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;composer require laravel/sail --dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;接著使用 artisan 指令產出 docker-compose.yml。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;php artisan sail:install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;可以選擇想要使用的服務。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; Which services would you like to install? [mysql]:
  [0] mysql
  [1] pgsql
  [2] mariadb
  [3] redis
  [4] memcached
  [5] meilisearch
  [6] minio
  [7] mailhog
  [8] selenium
 &amp;gt; 0,3,7

Sail scaffolding installed successfully.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;之後就可以使用 docker 來建置開發環境了。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./vendor/bin/sail up
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果不想打那麼多字的話可以在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.bashrc&lt;/code&gt; 或是 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.zshrc&lt;/code&gt; 中設定 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;alias&lt;/code&gt;（別名）。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;alias sail=&apos;bash vendor/bin/sail&apos;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;這樣啟動開發環境只需要輸入 sail 就好，啟動之後如果想終止，可以使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ctrl + C&lt;/code&gt; 終止容器。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sail up
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;如果想要在背景執行，可以加上 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-d&lt;/code&gt; 選項，即 Docker 原始提供的參數 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-d&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--detach&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sail up -d
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;終止所有 Laravel Sail 所有服務容器。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sail stop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;想要終止在背景執行的 Laravel Sail 並刪除所有服務容器的話。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sail down
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;設置域名&quot;&gt;設置域名&lt;/h2&gt;

&lt;p&gt;編輯你專案的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.env&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;新增&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;APP_PORT=48080
FORWARD_DB_PORT=43306
FORWARD_REDIS_PORT=46379
FORWARD_MEILISEARCH_PORT=47700
FORWARD_MAILHOG_PORT=41025
FORWARD_MAILHOG_DASHBOARD_PORT=48025
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;之後到你本機修改&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;host&lt;/code&gt;新增域名&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;127.0.0.1 project.tset
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;之後瀏覽器開啟&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;localhost:81&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;點選&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Hosts -&amp;gt; Proxy Hosts -&amp;gt; Add Proxy Hosts&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;輸入你定義的域名，並在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Forward Hostname/IP&lt;/code&gt;填入&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;host.docker.internal&lt;/code&gt;，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;port&lt;/code&gt;填入&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;48080&lt;/code&gt;後save。&lt;/p&gt;

&lt;p&gt;之後直接訪問&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;project.tset&lt;/code&gt;就可以看到你的專案了。&lt;/p&gt;
&lt;div class=&quot;alert&quot;&gt;
之後新增新的專案除了.env裡的port要改，docker-compose.yml 裡面的vite port也要改(如果laravel版本&amp;gt;9)。
&lt;/div&gt;

&lt;h2 id=&quot;新增專案&quot;&gt;新增專案&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -s https://laravel.build/project1 | bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;設定方法跟上面一樣。&lt;/p&gt;

&lt;h2 id=&quot;我的-docker-composeyml&quot;&gt;我的 docker-compose.yml&lt;/h2&gt;
&lt;p&gt;加裝了phpmyadmin&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# For more information: https://laravel.com/docs/sail
version: &apos;3&apos;
services:
    laravel.test:
        build:
            context: ./vendor/laravel/sail/runtimes/8.1
            dockerfile: Dockerfile
            args:
                WWWGROUP: &apos;${WWWGROUP}&apos;
        image: sail-8.1/app
        extra_hosts:
            - &apos;host.docker.internal:host-gateway&apos;
        ports:
            - &apos;${APP_PORT:-80}:80&apos;
            - &apos;${VITE_PORT:-5173}:${VITE_PORT:-5173}&apos;
        environment:
            WWWUSER: &apos;${WWWUSER}&apos;
            LARAVEL_SAIL: 1
            XDEBUG_MODE: &apos;${SAIL_XDEBUG_MODE:-off}&apos;
            XDEBUG_CONFIG: &apos;${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}&apos;
        volumes:
            - &apos;.:/var/www/html&apos;
        networks:
            - sail
        depends_on:
            - mysql
            - redis
            - meilisearch
            - selenium
    mysql:
        image: &apos;mysql/mysql-server:8.0&apos;
        ports:
            - &apos;${FORWARD_DB_PORT:-3306}:3306&apos;
        environment:
            MYSQL_ROOT_PASSWORD: &apos;${DB_PASSWORD}&apos;
            MYSQL_ROOT_HOST: &quot;%&quot;
            MYSQL_DATABASE: &apos;${DB_DATABASE}&apos;
            MYSQL_USER: &apos;${DB_USERNAME}&apos;
            MYSQL_PASSWORD: &apos;${DB_PASSWORD}&apos;
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - &apos;sail-mysql:/var/lib/mysql&apos;
            - &apos;./vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh&apos;
        networks:
            - sail
        healthcheck:
            test: [&quot;CMD&quot;, &quot;mysqladmin&quot;, &quot;ping&quot;, &quot;-p${DB_PASSWORD}&quot;]
            retries: 3
            timeout: 5s
    redis:
        image: &apos;redis:alpine&apos;
        ports:
            - &apos;${FORWARD_REDIS_PORT:-6379}:6379&apos;
        volumes:
            - &apos;sail-redis:/data&apos;
        networks:
            - sail
        healthcheck:
            test: [&quot;CMD&quot;, &quot;redis-cli&quot;, &quot;ping&quot;]
            retries: 3
            timeout: 5s
    meilisearch:
        image: &apos;getmeili/meilisearch:latest&apos;
        ports:
            - &apos;${FORWARD_MEILISEARCH_PORT:-7700}:7700&apos;
        volumes:
            - &apos;sail-meilisearch:/meili_data&apos;
        networks:
            - sail
        healthcheck:
            test: [&quot;CMD&quot;, &quot;wget&quot;, &quot;--no-verbose&quot;, &quot;--spider&quot;,  &quot;http://localhost:7700/health&quot;]
            retries: 3
            timeout: 5s
    mailhog:
        image: &apos;mailhog/mailhog:latest&apos;
        ports:
            - &apos;${FORWARD_MAILHOG_PORT:-1025}:1025&apos;
            - &apos;${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025&apos;
        networks:
            - sail
    selenium:
        image: &apos;selenium/standalone-chrome&apos;
        volumes:
            - &apos;/dev/shm:/dev/shm&apos;
        networks:
            - sail
    phpmyadmin:
        image: &apos;phpmyadmin:latest&apos;
        ports:
          - 8080:80
        environment:
          MYSQL_ROOT_PASSWORD: &apos;${DB_PASSWORD}&apos;
          PMA_HOST: mysql
          PMA_USER: &apos;${DB_USERNAME}&apos;
          PMA_PASSWORD: &apos;${DB_PASSWORD}&apos;
        links:
          - &quot;mysql:db&quot;
        depends_on:
          - mysql
        networks:
          - sail
networks:
    sail:
        driver: bridge
volumes:
    sail-mysql:
        driver: local
    sail-redis:
        driver: local
    sail-meilisearch:
        driver: local
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;可以直接照用，&lt;/p&gt;

&lt;p&gt;如果想要對建立的容器進行調整的話，可以將 sail 的 docker-compose.yml 產出來。&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;php artisan sail:publish
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;此時專案底下就會多一個 docker 資料夾，底下會放置建置容器用的 Dockerfile 還有 php.ini 等設定檔案。&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ tree docker
docker
├── 7.4
│   ├── Dockerfile
│   ├── php.ini
│   ├── start-container
│   └── supervisord.conf
├── 8.0
│   ├── Dockerfile
│   ├── php.ini
│   ├── start-container
│   └── supervisord.conf
└── 8.1
    ├── Dockerfile
    ├── php.ini
    ├── start-container
    └── supervisord.conf
3 directories, 12 files
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;docker-compse.yml 中的 context 也會更動，從 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./vendor/laravel/sail/runtimes/8.1&lt;/code&gt; 會從改成 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./docker/81&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;build:
    context: ./docker/8.1
    dockerfile: Dockerfile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;更動後，需要重新建立容器，這裡可以使用 build 的指令。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sail build --no-cache
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;用sailx來開發&quot;&gt;用Sailx來開發&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#原先使用

php artisan migrate

#改成

sail artisan migrate

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;除此之外還有整合 php 指令。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sail php --version
sail php script.php
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;其他東西邏輯差不多，可以參考官網的Sail文檔。&lt;/p&gt;

&lt;h1 id=&quot;參考資料&quot;&gt;參考資料&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://docfunc.com/posts/47/%E7%94%A8-laravel-sail-%E4%BE%86%E5%BB%BA%E7%BD%AE-laravel-%E9%96%8B%E7%99%BC%E7%92%B0%E5%A2%83-post&quot;&gt;用 Laravel Sail 來建置 Laravel 開發環境&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://laravel.com/docs/9.x/sail&quot;&gt;Laravel SAil&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gist.github.com/kiddtang/adb6385d8faa86d8ee2e2a45ed32b5bd&quot;&gt;proxy-manager&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Wei Chang</name></author><category term="Server" /><category term="Laravel" /><category term="Docker" /><category term="Sail" /><category term="WSL2" /><summary type="html">前言   目前在研究各種架設Laravel的方法，經歷了Homestead、laradock最終還是走到了一開始最想使用的Sail。實際上使用起來跟感受到與laradock使用有明顯差別，原因是在於laradock使用的專案資料夾位於windows系統，而Laravel Sail是直接存放於WSL系統內，以筆者為例，開新的laravel專案在laradock開啟/歡迎頁面需要load 1秒的時間而在Sail中大概就只要幾十毫秒，以體感差非常多。剛好在laradock上的案件量不多趁新鮮趕緊換成Laravel Sail來使用，以下將帶來在Windows 11 上部屬Laravel Sail的過程。 關於laradock在windows上的檔案IO其實是有解的，但我覺得有點麻煩就沒用了。</summary></entry><entry><title type="html">Windows部署Laradock</title><link href="http://localhost:4000/server/2022/07/07/005-laradock/" rel="alternate" type="text/html" title="Windows部署Laradock" /><published>2022-07-07T00:00:00+08:00</published><updated>2022-07-07T00:00:00+08:00</updated><id>http://localhost:4000/server/2022/07/07/005-laradock</id><content type="html" xml:base="http://localhost:4000/server/2022/07/07/005-laradock/">&lt;hr /&gt;

&lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;
&lt;p&gt;以往在Windows系統上建立 PHP 相關專案大多都使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;XAMPP&lt;/code&gt; 等集成軟體，或是在 Server 主機上安裝 LAMP/LNMP，不相同的平台建置各有各自的作法，在開發不同專案時如果有切換 PHP 版本的需求，跟依賴與Virtualbox導致I/O瓶頸的Vagrant相比使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Laradock&lt;/code&gt; 除了I/O速度的問題外套件的未來維護也更勝一籌，所以以下我將記錄我在Windows10上面架設laradock的過程。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h1 id=&quot;laradock&quot;&gt;Laradock&lt;/h1&gt;

&lt;p&gt;Laradock 是基於 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Docker&lt;/code&gt; 的一個快速建立 Laravel/PHP 的開發環境工具，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Docker&lt;/code&gt; 則是在各作業系統上先做出一個共通的平台，將應用程式獨立於Container 當中，省去搭建作業系統的成本。&lt;/p&gt;

&lt;p&gt;Dokcer Desktop 在Windows中依賴WSL&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;什麼是 WSL？&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WSL 2&lt;/code&gt; 是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;「Windows 子系統 Linux 版」&lt;/code&gt;架構的新版本，可讓 Windows 子系統 Linux 版在 Windows 上執行 ELF64 Linux 二進位檔。 其主要目標是增加檔案系統效能，以及新增完整的系統呼叫相容性。
與Virtualbox虛擬機相比有更接近系統底層的效能及相容性。&lt;/p&gt;

&lt;h2 id=&quot;安裝步驟&quot;&gt;安裝步驟&lt;/h2&gt;

&lt;h3 id=&quot;系統需求&quot;&gt;系統需求&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;CPU為64位元&lt;/li&gt;
  &lt;li&gt;有4G以上的RAM&lt;/li&gt;
  &lt;li&gt;BIOS的虛擬化技術已啟用&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;windows-環境&quot;&gt;Windows 環境&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.docker.com/desktop/windows/wsl/&quot;&gt;官方說明：https://docs.docker.com/desktop/windows/wsl/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;用管理員身分執行 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Windows 終端機&lt;/code&gt; 、 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cmd&lt;/code&gt; 、 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;powershell&lt;/code&gt;，執行以下命令&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;啟用 Windows 子系統 Linux 版&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;啟用虛擬機器功能&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.docker.com/products/docker-desktop/&quot;&gt;Docker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;先下載&lt;a href=&quot;https://desktop.docker.com/win/main/amd64/Docker%20Desktop%20Installer.exe?utm_source=docker&amp;amp;utm_medium=webreferral&amp;amp;utm_campaign=dd-smartbutton&amp;amp;utm_location=header&quot;&gt;Windows版本的Docker Desktop Installer&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下載 Linux 核心更新套件並安裝
&lt;a href=&quot;https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi&quot;&gt;WSL2 Linux 核心更新套件 (適用於 x64 電腦)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;完成後重新開機後Docker已可正常運作&lt;/p&gt;

&lt;h3 id=&quot;設定laradock&quot;&gt;設定Laradock&lt;/h3&gt;

&lt;p&gt;建立一個資料夾存放laradock&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/laradock/laradock.git laradock
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;並新增 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;www&lt;/code&gt; 於同層資料夾。 並在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;www&lt;/code&gt;資料夾新增 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;case-1&lt;/code&gt; 、 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;case-2&lt;/code&gt; 兩個資料夾。&lt;/p&gt;

&lt;p&gt;結構如下&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;├─Laradock
└─www
    ├─case-1
    └─case-2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;進入&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Laradock&lt;/code&gt;資料夾 並且複製已經準備好的範例檔 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;env.example&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd laradock
cp .env.example .env
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;打開&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.env&lt;/code&gt;文件進行編輯&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;APP_CODE_PATH_HOST=../www

APP_CODE_PATH_CONTAINER=/var/www

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面主要是修改專案存放路徑，其他如&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PHP&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MYSQL&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PPMA&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nginx&lt;/code&gt;等設定可以依自己的需求在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.env&lt;/code&gt;修改。&lt;/p&gt;

&lt;h3 id=&quot;設定nginx&quot;&gt;設定Nginx&lt;/h3&gt;

&lt;p&gt;到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/laradock/nginx/sites&lt;/code&gt;資料夾複製&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;laravel.conf.example&lt;/code&gt;為&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;primary.conf&lt;/code&gt;，接下來編輯&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;primary.conf&lt;/code&gt;。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 原本的
root /var/www/laravel/public
# 修改為(因為www 要放各項專案，且laravel任何request導入進來都需要走public目錄)
root /var/www/case-1/public

# 原本的
server_name laravel.test;
# 修改為 待會會建立兩個Laravel傳案做示範這邊以project1.test當作第一個傳案
server_name project1.test;

# server_name : 網域
# root ：對應的檔案路徑
# 所以這兩個網域只要後面的port號打對一樣都能進入相對應的檔案路徑 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;再來新增&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;case-2&lt;/code&gt;的config，為節省時間，全部的內容如下。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#server {
#    listen 80;
#    server_name laravel.com.co;
#    return 301 https://laravel.com.co$request_uri;
#}

server {

    listen 80;
    listen [::]:80;

    # For https
    # listen 443 ssl;
    # listen [::]:443 ssl ipv6only=on;
    # ssl_certificate /etc/nginx/ssl/default.crt;
    # ssl_certificate_key /etc/nginx/ssl/default.key;

    server_name case-1.test;
    root /var/www/case-1/public;
    index index.php index.html index.htm;

    location / {
         try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~ \\.php$ {
        try_files $uri /index.php =404;
        fastcgi_pass php-upstream;
        fastcgi_index index.php;
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        #fixes timeouts
        fastcgi_read_timeout 600;
        include fastcgi_params;
    }

    location ~ /\\.ht {
        deny all;
    }

    location /.well-known/acme-challenge/ {
        root /var/www/letsencrypt/;
        log_not_found off;
    }

    error_log /var/log/nginx/laravel_error.log;
    access_log /var/log/nginx/laravel_access.log;
}

server {

    listen 80;
    listen [::]:80;

    # For https
    # listen 443 ssl;
    # listen [::]:443 ssl ipv6only=on;
    # ssl_certificate /etc/nginx/ssl/default.crt;
    # ssl_certificate_key /etc/nginx/ssl/default.key;

    server_name case-2.test;
    root /var/www/case-2/public;
    index index.php index.html index.htm;

    location / {
         try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~ \\.php$ {
        try_files $uri /index.php =404;
        fastcgi_pass php-upstream;
        fastcgi_index index.php;
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        #fixes timeouts
        fastcgi_read_timeout 600;
        include fastcgi_params;
    }

    location ~ /\\.ht {
        deny all;
    }

    location /.well-known/acme-challenge/ {
        root /var/www/letsencrypt/;
        log_not_found off;
    }

    error_log /var/log/nginx/laravel_error.log;
    access_log /var/log/nginx/laravel_access.log;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;build-docker-image-to-container&quot;&gt;Build Docker Image to Container&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker-compose up -d nginx mysql phpmyadmin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;開啟工作區域的bash&quot;&gt;開啟工作區域的bash&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#****進入Container 內建立專案，可呼叫artisan、composer 相關指令**** 
docker-compose exec workspace bash

# 實際上在www資料夾位置，此時先使用Composer 安裝Laravel(項目各自為case-1、case-2)
composer create-project laravel/laravel --prefer-dist case-1
composer create-project laravel/laravel --prefer-dist case-2

#離開 Container
exit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;選擇任一case專案的env做測試連線mysql&quot;&gt;選擇任一case專案的.env做測試連線mysql&lt;/h3&gt;

&lt;p&gt;先去&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;phpMyAdmin&lt;/code&gt;新建一個&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;case-1&lt;/code&gt;的資料庫。&lt;/p&gt;

&lt;p&gt;接著複製&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.env.example&lt;/code&gt;為&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.env&lt;/code&gt;並修改以下內容。&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 因為實際執行時是在docker容器內，容器內的mysql的port目前是3306
# 外面連線時是依據剛剛MYSQL_PORT的設定
DB_CONNECTION=mysql
DB_HOST=mysql
DB_PORT=3306
DB_DATABASE=case-1
DB_USERNAME=root
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;進行&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;migrate&lt;/code&gt;測試是否有連上資料庫。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;####當前目錄 : /laradock
docker-compose exec workspace bash

cd case-1

php artisan migrate

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果正常應該可以看到&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/005/1.png&quot; alt=&quot;1&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;手動設定網址與-ip-對應的-hosts-做測試&quot;&gt;手動設定網址與 IP 對應的 hosts 做測試&lt;/h3&gt;

&lt;p&gt;在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C:\Windows\System32\drivers\etc&lt;/code&gt;開啟&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;host&lt;/code&gt;檔案並新增&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;127.0.0.1 case-1.test
127.0.0.1 case-2.test
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;開啟專案網址&quot;&gt;開啟專案網址。&lt;/h3&gt;

&lt;p&gt;直接在瀏覽器的網址列輸入&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;127.0.0.1 case-1.test
127.0.0.1 case-2.test
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;可以看到laravel的歡迎畫面就代表設定成功了。&lt;/p&gt;

&lt;h3 id=&quot;phpmyadmin-http1270018081&quot;&gt;phpMyAdmin http://127.0.0.1:8081/&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root 預設值   
帳號: root
密碼: root
user 預設值
帳號: PMA_USER=default
密碼: PMA_PASSWORD=secret
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;參考資料&quot;&gt;參考資料&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.twjoin.com/15f046d64c34&quot;&gt;一步步教您使用 Laradock 快速打造Laravel/PHP 環境&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://laradock.io/&quot;&gt;laradock&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000040344047&quot;&gt;laradock 笔记&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Wei Chang</name></author><category term="Server" /><category term="Laravel" /><category term="Docker" /><summary type="html">前言 以往在Windows系統上建立 PHP 相關專案大多都使用 XAMPP 等集成軟體，或是在 Server 主機上安裝 LAMP/LNMP，不相同的平台建置各有各自的作法，在開發不同專案時如果有切換 PHP 版本的需求，跟依賴與Virtualbox導致I/O瓶頸的Vagrant相比使用 Laradock 除了I/O速度的問題外套件的未來維護也更勝一籌，所以以下我將記錄我在Windows10上面架設laradock的過程。</summary></entry><entry><title type="html">文章預覽顯示設定</title><link href="http://localhost:4000/%E5%89%8D%E7%AB%AF/2022/07/07/003-page/" rel="alternate" type="text/html" title="文章預覽顯示設定" /><published>2022-07-07T00:00:00+08:00</published><updated>2022-07-07T00:00:00+08:00</updated><id>http://localhost:4000/%E5%89%8D%E7%AB%AF/2022/07/07/003-page</id><content type="html" xml:base="http://localhost:4000/%E5%89%8D%E7%AB%AF/2022/07/07/003-page/">&lt;hr /&gt;
&lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;

&lt;p&gt;看了一下自己的網誌之後覺得哪邊怪怪的，原來是因為在文章列表中顯示出來的預覽範圍的問題啊！趕緊查一下資料，將找到的方法紀錄一下。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h1 id=&quot;實作&quot;&gt;實作&lt;/h1&gt;

&lt;p&gt;通過分隔符的方式.
需要先在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;中配置分隔符&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;excerpt_separator:  &apos;&amp;lt;!-- more --&amp;gt;&apos;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;然後就可以在正文中通過插入&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;!-- more --&amp;gt;&lt;/code&gt;來將以上的內容標記為文章摘要.&lt;/p&gt;

&lt;h1 id=&quot;參考資料&quot;&gt;參考資料&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://moonagic.com/configure-the-jekyll-article-list-summary/&quot;&gt;Jekyll文章列表摘要設置&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Wei Chang</name></author><category term="前端" /><category term="jekyll" /><summary type="html">前言 看了一下自己的網誌之後覺得哪邊怪怪的，原來是因為在文章列表中顯示出來的預覽範圍的問題啊！趕緊查一下資料，將找到的方法紀錄一下。</summary></entry><entry><title type="html">Windows部署Laravel Homestead</title><link href="http://localhost:4000/server/2022/07/07/004-lavarel-homestead/" rel="alternate" type="text/html" title="Windows部署Laravel Homestead" /><published>2022-07-07T00:00:00+08:00</published><updated>2022-07-07T00:00:00+08:00</updated><id>http://localhost:4000/server/2022/07/07/004-lavarel-homestead</id><content type="html" xml:base="http://localhost:4000/server/2022/07/07/004-lavarel-homestead/">&lt;hr /&gt;

&lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;

&lt;p&gt;以前寫的PHP專案都是用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CodeIgniter&lt;/code&gt;當框架來開發，但最近公司要轉用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Laravel&lt;/code&gt;來當之後的開發框架，因為之前虛擬環境都是用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Vagrant&lt;/code&gt;來架設，估狗&lt;em&gt;windows 開發 laravel&lt;/em&gt;裡面找到&lt;a href=&quot;https://laravel.tw/&quot;&gt;lavavel.tw&lt;/a&gt;裡面就有答案了。殊不知年輕人就是年輕人想得太少了…原來&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lavavel.tw&lt;/code&gt;這個官方文檔對應的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;laravel&lt;/code&gt;版本是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;5.3&lt;/code&gt;。看了一下公司專案的版本…&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;8.x&lt;/code&gt;!會這樣講，是因為我又是裝完之後才發現的，&lt;del&gt;因為要Build好開發環境才能看專案阿XD&lt;/del&gt;都怪我沒仔細看專案內容QQ，但裝了都裝了，我還是要記錄一下&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Laravel Homestead&lt;/code&gt;的架設過程。
&lt;!-- more --&gt;&lt;/p&gt;
&lt;h1 id=&quot;vagrant&quot;&gt;Vagrant&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Vagrant&lt;/code&gt;是一個用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Vagrantfile&lt;/code&gt;來設定的虛擬環境軟體，要使用你要先安裝：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.vagrantup.com/&quot;&gt;Vagrant&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.virtualbox.org/&quot;&gt;VirtualBox&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;alert&quot;&gt;
Vagrant跟VirtualBox的版本有對應關係，需要各自安裝對的版本才能正常運行！
&lt;/div&gt;

&lt;p&gt;具體上的教學網路有很多且不是本文重點，我就不贅述了。&lt;/p&gt;

&lt;h1 id=&quot;laravel-homestead&quot;&gt;Laravel Homestead&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;Laravel Homestead 是一個官方預載的 Vagrant box，提供一個美好的開發環境，不需要在本機電腦安裝 PHP、HHVM、網頁伺服器或任何伺服器軟體。不用擔心搞亂你的系統！Vagrant box 可以搞定一切。如果有什麼地方搞爛掉了，還可以在幾分鐘內快速地砍掉並重建虛擬機器！&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;安裝-homestead-vagrant-box&quot;&gt;安裝 Homestead Vagrant Box&lt;/h2&gt;

&lt;p&gt;當 VirtualBox / VMware 以及 Vagrant 安裝完成後，可以在終端機執行下列指令將 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;laravel/homestead&lt;/code&gt; 這個 box 安裝進你的 Vagrant 程式中。下載 box 會花一點時間，時間長短將依據你的網路速度決定：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vagrant box add laravel/homestead
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;安裝-homestead&quot;&gt;安裝 Homestead&lt;/h2&gt;

&lt;p&gt;可以簡單地透過複製(clone)儲存庫的方式來安裝 Homestead。建議可將儲存庫複製至你的「home」目錄中的 Homestead 資料夾，如此一來 Homestead box 將能提供主機服務給你所有的 Laravel 專案：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/laravel/homestead.git Homestead
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;複製完 Homestead 儲存庫，即可在 Homestead 目錄中執行 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bash init.sh&lt;/code&gt; 指令來建立 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Homestead.yaml&lt;/code&gt; 設定檔。 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Homestead.yaml&lt;/code&gt; 檔案將會被放置在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;homestead&lt;/code&gt;目錄中：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./init.bat
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;設定-homestead&quot;&gt;設定 Homestead&lt;/h2&gt;

&lt;h3 id=&quot;設定提供者&quot;&gt;設定提供者&lt;/h3&gt;
&lt;p&gt;在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/homestead/Homestead.yaml&lt;/code&gt; 檔案中的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;provider&lt;/code&gt; 是用來設定想要使用哪一個 Vagrant 提供者，像是：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;virtualbox&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vmware_fusion&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vmware_workstation&lt;/code&gt; 或 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;parallels&lt;/code&gt;。這邊我們要填寫:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;provider: virtualbox
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;設定共享目錄&quot;&gt;設定共享目錄&lt;/h3&gt;

&lt;p&gt;在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Homestead.yaml&lt;/code&gt; 檔案的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;folders&lt;/code&gt; 屬性裡列出所有想與 Homestead 環境共享的目錄。這些目錄中的檔案若有更動，它們將會同步更動在你的本機電腦與 Homestead 環境。可以將多個共享目錄都設定於此：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;folders:
    - map: C:\Code
      to: /home/vagrant/Code
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;設定-nginx-網站&quot;&gt;設定 Nginx 網站&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sites&lt;/code&gt; 屬性幫助你可以輕易的指定「網域」對應至 homestead 環境中的目錄。在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Homestead.yaml&lt;/code&gt; 檔案中已包含一個網站設定範例。同樣的，你可以增加數個網站到 Homestead 環境中。Homestead 可以為每個你正在開發中的 Laravel 專案提供方便的虛擬化環境：&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sites:
    - map: homestead.app
      to: /home/vagrant/Code/Laravel/public
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;在配置 Homestead box 之後，若有更改 sites 屬性，你應該重新執行配置指令 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vagrant reload --provision&lt;/code&gt; 來更新虛擬機裡的 Nginx 設定。&lt;/p&gt;

&lt;h3 id=&quot;hosts-檔案&quot;&gt;Hosts 檔案&lt;/h3&gt;

&lt;p&gt;你必須為 Nginx 網站在你機器中的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hosts&lt;/code&gt; 檔案增加「網域」。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hosts&lt;/code&gt; 檔案會將你對 Homestead 網站的請求重導至 Homestead 機器。在 Mac 或 Linux 上，在 Windows 上，則存放於 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C:\Windows\System32\drivers\etc\hosts&lt;/code&gt;。你增加至該檔案的內容看起來會像這樣：&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;192.168.10.10  homestead.app
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;務必確認 IP 位置與你的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Homestead.yaml&lt;/code&gt; 檔案中設定相同。一旦將網域設定在 hosts 檔案之後，你就可以透過網頁瀏覽器造訪網站！&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://homestead.app
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;啟動-vagrant-box&quot;&gt;啟動 Vagrant Box&lt;/h2&gt;

&lt;p&gt;當你編輯完 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Homestead.yaml&lt;/code&gt;後，開啟終端機，進入 Homestead 目錄，並執行 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vagrant up&lt;/code&gt; 指令。Vagrant 就會自將虛擬主機啟動並自動設定共享目錄和 Nginx 網站。&lt;/p&gt;

&lt;p&gt;如果要移除虛擬機器，可以使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vagrant destroy --force&lt;/code&gt; 指令。&lt;/p&gt;

&lt;h2 id=&quot;透過-ssh-連接&quot;&gt;透過 SSH 連接&lt;/h2&gt;

&lt;p&gt;你可以在終端機裡進入你的 Homestead 目錄，並執行 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vagrant ssh&lt;/code&gt; 指令藉此以 SSH 連上你的虛擬主機。&lt;/p&gt;

&lt;h1 id=&quot;參考資料&quot;&gt;參考資料&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://laravel.tw/docs/5.3/homestead&quot;&gt;laravel.tw/docs/5.3/homestead&lt;/a&gt;&lt;/p&gt;</content><author><name>Wei Chang</name></author><category term="Server" /><category term="Laravel" /><category term="Vagrant" /><summary type="html">前言 以前寫的PHP專案都是用CodeIgniter當框架來開發，但最近公司要轉用Laravel來當之後的開發框架，因為之前虛擬環境都是用Vagrant來架設，估狗windows 開發 laravel裡面找到lavavel.tw裡面就有答案了。殊不知年輕人就是年輕人想得太少了…原來lavavel.tw這個官方文檔對應的laravel版本是5.3。看了一下公司專案的版本…8.x!會這樣講，是因為我又是裝完之後才發現的，因為要Build好開發環境才能看專案阿XD都怪我沒仔細看專案內容QQ，但裝了都裝了，我還是要記錄一下Laravel Homestead的架設過程。</summary></entry><entry><title type="html">完善網誌：留言區、版權資訊、訪問人數</title><link href="http://localhost:4000/%E5%89%8D%E7%AB%AF/2022/07/05/002-complete/" rel="alternate" type="text/html" title="完善網誌：留言區、版權資訊、訪問人數" /><published>2022-07-05T00:00:00+08:00</published><updated>2022-07-05T00:00:00+08:00</updated><id>http://localhost:4000/%E5%89%8D%E7%AB%AF/2022/07/05/002-complete</id><content type="html" xml:base="http://localhost:4000/%E5%89%8D%E7%AB%AF/2022/07/05/002-complete/">&lt;hr /&gt;
&lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;

&lt;p&gt;續昨天 &lt;a href=&quot;https://zwei-c.github.io/%E5%89%8D%E7%AB%AF/2022/07/04/001-build/&quot;&gt;建置jekyll+Github Page&lt;/a&gt;完成基本設定後，我又參考&lt;a href=&quot;https://ankmak.com/&quot;&gt;Ank’s Blog&lt;/a&gt;、&lt;a href=&quot;https://cynthiachuang.github.io/&quot;&gt;辛西亞的技能樹&lt;/a&gt;等大大的網誌內的教學文，新增一些功能到我的網誌內，讓功能更完善一些。
&lt;!-- more --&gt;&lt;/p&gt;
&lt;h1 id=&quot;新增版權資料&quot;&gt;新增版權資料&lt;/h1&gt;

&lt;p&gt;參考了&lt;a href=&quot;https://cynthiachuang.github.io/&quot;&gt;辛西亞大大&lt;/a&gt;的&lt;a href=&quot;https://cynthiachuang.github.io/Add-Post-Copyright/&quot;&gt;版權訊息配置&lt;/a&gt;，我這邊做了一些更改，簡單來說就是用jekyll內的UI把自訂的版權信息放到文章底部。&lt;/p&gt;

&lt;h2 id=&quot;開啟版權訊息功能&quot;&gt;開啟版權訊息功能&lt;/h2&gt;

&lt;p&gt;到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/_config_yml&lt;/code&gt; 找到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;post_copyright&lt;/code&gt; 把 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;false&lt;/code&gt; 改成 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;true&lt;/code&gt;，再把版權資訊&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;license&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;license_url&lt;/code&gt;填進去。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;post_copyright:
  enable: true
  license: CC BY-NC-SA 4.0
  license_url: https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;顯示在頁面中的版權資訊則是要到&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_data/languages/default.yml&lt;/code&gt;裡面修改，不過因為我在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/_config_yml&lt;/code&gt;裡面設定的預設語言是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;zh-tw&lt;/code&gt;所以我要找到&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_data/languages/zh-tw.yml&lt;/code&gt;去修改。我覺得原本辛西亞大大寫的內容已經夠好了再去改就有點顯得畫蛇添足，所以這邊直接使用她的範例。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; copyright:
   author: 本文作者
   link: 本文連結
   license_title: 版權聲明
   license_content: &apos;除非另有標注，部落格中所有文章，均採用
     &amp;lt;a href=&quot;%s&quot; rel=&quot;external nofollow&quot; target=&quot;_blank&quot;&amp;gt;%s&amp;lt;/a&amp;gt; 許可協議。
     轉載請標明作者、連結與出處！&apos;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;這樣版權訊息就會出現在文章底部囉!
&lt;img src=&quot;/assets/images/002/1.png&quot; alt=&quot;1&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;版權訊息關閉選項&quot;&gt;版權訊息關閉選項&lt;/h2&gt;

&lt;p&gt;因為辛西亞大大的聲明裡面寫到：「除非另有標注…」，既然寫說另有標注代表可能會有不加訊息的狀況，因此可以加個開關可以決定是否放置版權訊息：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;修改 HTLM 檔
 先回到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_includes/_macro/post.html&lt;/code&gt; 中找到剛剛引入 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;post-copyright.html&lt;/code&gt; 的位置，並在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;include&lt;/code&gt; 外加上條件式。
 在這邊設定了一個名為 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;copyright&lt;/code&gt; 的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flag&lt;/code&gt;，且僅希望在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;copyright&lt;/code&gt; 設定為 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;false&lt;/code&gt; 時才會隱藏該區域；若未設定或設定為 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ture&lt;/code&gt; 時，則正常顯示該區，因此我必須明確寫出它的條件式：&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; + {％ if page.copyright != false ％}
     {％ include _macro/post-copyright.html ％}   
 + {％ endif ％}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;ymal 設定
 搞定後，當你某篇文章不放置版權訊息時，就在文章上方的 yaml 區，設定的 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;copyright&lt;/code&gt; 的 flag：&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ---
 title: &quot;完善網誌：留言區、版權資訊、訪問人數&quot;
 date: 2022-07-05
 + copyright: false
 ---
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;複製網頁文字時加上網站的作者與網址&quot;&gt;複製網頁文字時，加上網站的作者與網址&lt;/h2&gt;

&lt;p&gt;另外一個是常見的在複製文字的時候會自動加上版權訊息，這個在辛西亞大大的文章中也有教學，我這邊主要做了一點修改(真的是一點XD)，下面將直接實作。&lt;/p&gt;

&lt;p&gt;直接在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_includes/_scripts/pages/post-details.html&lt;/code&gt;裡面新增&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;document.addEventListener(&quot;copy&quot;, function (evt) {
		let text = document.getSelection().function toString() { [native code] }(); //抓取反白區塊的文字。
		if (text.length &amp;gt;= 100) {  //當複製超過一百個字元加上文字。
			text = text + &quot;\n\n&quot; + &quot;=========================================\n&quot; + &quot;你複製整段要幹嘛==?&quot;;
		}
        console.log(text)
		let clipdata = evt.clipboardData || window.clipboardData;
		clipdata.setData(&quot;text&quot;, text); //將剪貼簿的文字改成剛剛產生的text
		evt.preventDefault();
	});
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;成果如圖:
&lt;img src=&quot;/assets/images/002/2.png&quot; alt=&quot;2&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;新增留言區&quot;&gt;新增留言區&lt;/h1&gt;

&lt;p&gt;不論是Blogger、CSDN、IT邦等等網誌都有留言區，除了可以讓網友給作者留言另外最重要的就是&lt;strong&gt;酷&lt;/strong&gt;，在爬了一段時間之後決定使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Valine&lt;/code&gt;來當本網站的留言系統，選擇&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Valine&lt;/code&gt;的原因是因為：輕量化、好部署、可匿名留言、沒廣告，對，最重要的一點就是沒有廣告！對這方面有興趣的朋友可以看Ivan Mak大大的這篇&lt;a href=&quot;https://ankmak.com/tech/2021/03/11/use-valine-as-comments-in-jekyll.html&quot;&gt;在 Jekyll 上使用 Valine 作為評論系統/留言版&lt;/a&gt;這裡寫得比我詳細太多了，我主要也是參考這篇文章完成留言系統架設的，但人生就像OO充滿皺褶，所以這邊除了部署步驟還要額外紀錄一下我遇到的BUG。&lt;/p&gt;

&lt;h2 id=&quot;valine-的安裝和配置&quot;&gt;&lt;a href=&quot;https://valine.js.org/&quot;&gt;Valine&lt;/a&gt; 的安裝和配置&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;Valine 誕生於2017年8月7日，是一款基於LeanCloud的快速、簡潔且高效的無後端評論系統。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;註冊-leancloud&quot;&gt;註冊 &lt;a href=&quot;https://console.leancloud.app/&quot;&gt;leancloud&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;選擇註冊&lt;strong&gt;國際版&lt;/strong&gt;的就好了。&lt;/p&gt;
&lt;h3 id=&quot;appid跟appkey&quot;&gt;AppID跟AppKey&lt;/h3&gt;
&lt;p&gt;進入控制檯點擊左上角創建應用填入應用名稱，選擇&lt;strong&gt;開發版&lt;/strong&gt;即可，然後進到&lt;em&gt;設置/應用憑證&lt;/em&gt;找到並記住你的AppID跟AppKey，等等要用。&lt;img src=&quot;/assets/images/002/4.png&quot; alt=&quot;4&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;新增各個頁面&quot;&gt;新增各個頁面&lt;/h3&gt;
&lt;p&gt;因為我用的next這個模板沒有內建Valine，所以要自己新增各個頁面。&lt;/p&gt;
&lt;h4 id=&quot;新增valinehtm&quot;&gt;新增&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;valine.htm&lt;/code&gt;&lt;/h4&gt;
&lt;p&gt;在 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_includes_third-party\comments&lt;/code&gt;裡面添加一個文件&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;valine.htm&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{% unless site.duoshuo_shortname
  or site.disqus_shortname
  or site.hypercomments_id
  or site.gentie_productKey
  or site.duoshuo and site.duoshuo.shortname %}
{% if site.valine_comment.enable %}
&amp;lt;script src=&quot;//cdn1.lncld.net/static/js/3.0.4/av-min.js&quot;&amp;gt;&amp;lt;/script&amp;gt; //我自己是沒有下是這行，因為沒有在*中國境內*會404
&amp;lt;script src=&apos;//unpkg.com/valine/dist/Valine.min.js&apos;&amp;gt;&amp;lt;/script&amp;gt; //這個我打包下來放在本地
&amp;lt;script&amp;gt;
    new Valine({
        el: &apos;#comments&apos;,
        app_id: &apos;{{ site.valine_comment.leancloud_appid }}&apos;,   //這裡變量的取值在網站配置文件裡_config.yml
        app_key: &apos;{{ site.valine_comment.leancloud_appkey }}&apos;, //這裡變量的取值在網站配置文件裡_config.yml
        placeholder:&apos;{{ site.valine_comment.placeholder }}&apos;    //這裡變量的取值在網站配置文件裡_config.yml,
        serverURLs: &quot;your_REST_API網址&quot;
    });&amp;lt;/script&amp;gt;
{% endif %}
{% endunless %}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;修改_configyml配置&quot;&gt;修改&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;配置&lt;/h4&gt;

&lt;p&gt;在_config.yml添加變量&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;app_id&lt;/code&gt;，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;app_key&lt;/code&gt;， &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;placeholde&lt;/code&gt;的值，關於取值傳遞到valine.html，是通過jekyll變量構建。
  具體程式碼如下：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;valine_comment:
  enable: true
  # app_id
  leancloud_appid: your_appid
  # app_key
  leancloud_appkey: your_appkey
  # placeholde
  placeholder: &quot;提供您的寶貴意見&quot;,
  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;套用valinehtml&quot;&gt;套用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;valine.html&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;由於前面創建了&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;valine.html&lt;/code&gt;，需要jekyll套用這個html才能夠執行這個頁面的程式碼，使評論框顯示在每篇文章的頁面，需要在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_includes\_third-party\comments\index.html&lt;/code&gt;裡面添加程式碼：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{% include _third-party/comments/valine.html %}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;並在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_includes/_partials/comments.html&lt;/code&gt;裡面插入程式碼：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{% elsif site.valine_comment.enable %}
 &amp;lt;div id=&quot;vcomments&quot;&amp;gt;&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;大功告成&quot;&gt;大功告成?&lt;/h3&gt;
&lt;p&gt;到這邊重載入一下jekyll看一下文章下面應該就會出現評論框了！
&lt;img src=&quot;/assets/images/002/5.png&quot; alt=&quot;5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;你也可以到&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LeanCloud&lt;/code&gt;的&lt;em&gt;數據存儲/結構化數據/Comment&lt;/em&gt;看一下有沒有留言進來。&lt;img src=&quot;/assets/images/002/6.png&quot; alt=&quot;6&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;valine-的擴充&quot;&gt;Valine 的擴充&lt;/h2&gt;

&lt;p&gt;雖然大致上完成了留言系統的建構，但是仍然有些鑑別度跟安全性上的問題還要解決。另外一點就是回覆留言的通知，這個很酷必須要做！&lt;/p&gt;

&lt;h3 id=&quot;回覆通知&quot;&gt;回覆通知&lt;/h3&gt;

&lt;p&gt;我這邊是用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Gmail&lt;/code&gt;來做&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SMTP&lt;/code&gt;的服務系統，因為今年6月之後Google關閉了&lt;del&gt;不安全性行為&lt;/del&gt;也因為把自己的密碼傳到別的網站本身就是一件不好的事，所以我們要申請一個for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Valine&lt;/code&gt;使用的應用程式密碼。&lt;/p&gt;

&lt;h4 id=&quot;生成app專用密碼&quot;&gt;生成APP專用密碼&lt;/h4&gt;

&lt;p&gt;Google 的 App 專用密碼生成網址 : https://myaccount.google.com/apppasswords&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/002/7.png&quot; alt=&quot;7&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;選取應用程式&lt;/strong&gt;和&lt;strong&gt;選取裝置&lt;/strong&gt;都可以任意選，只是方便自己記憶這個密碼是用來作什麼用途。我自己&lt;strong&gt;選取應用程式&lt;/strong&gt;是有乖乖選&lt;strong&gt;郵件&lt;/strong&gt;、&lt;strong&gt;選取裝置&lt;/strong&gt;那邊填上&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Valine&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;之後就會獲得一個16字元的密碼。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/002/8.png&quot; alt=&quot;8&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;設定leancloud&quot;&gt;設定&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LeanCloud&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;雲引擎&lt;/code&gt;/&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WEB&lt;/code&gt;/&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;設置&lt;/code&gt;/&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;添加新變量&lt;/code&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;變量&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;例子&lt;/th&gt;
      &lt;th&gt;說明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;SITE_NAME&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;AnkMak Blog	[必須]&lt;/td&gt;
      &lt;td&gt;網站名稱&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SITE_URL&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;https://ankmak.com	[必須]&lt;/td&gt;
      &lt;td&gt;網站 URL&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SMTP_SERVICE&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Gmail	[必須]&lt;/td&gt;
      &lt;td&gt;SMTP 服務(&lt;a href=&quot;https://nodemailer.com/smtp/well-known/#supported-services&quot;&gt;支援列表&lt;/a&gt;)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SMTP_USER&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;xxx@gmail.com	[必須]&lt;/td&gt;
      &lt;td&gt;Gmail 郵箱名稱&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SMTP_PASS&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;wnxxxxxxxxxxxxkv	[必須]&lt;/td&gt;
      &lt;td&gt;剛才產生的 App 密碼&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SENDER_NAME&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Ank Mak	[必須]&lt;/td&gt;
      &lt;td&gt;寄件人名稱&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SENDER_EMAIL&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;xxx@xxx.xx	[必須]&lt;/td&gt;
      &lt;td&gt;寄件人 Email&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ADMIN_URL&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;https://xxx-xxx.avosapps.us	[建議]&lt;/td&gt;
      &lt;td&gt;自動喚醒服務用(填入剛才創建的雲引擎域名)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;BLOGGER_EMAIL&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;xxx@xxx.xx	[可選]&lt;/td&gt;
      &lt;td&gt;收件 email，默認為 SENDER_EMAIL&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;AKISMET_KEY&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;xxxxxxxx	[可選]&lt;/td&gt;
      &lt;td&gt;Akismet Key 用於垃圾評論檢測，設為 MANUAL_REVIEW 表示開啟人工審核，留空為不使用&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;更多參數的說明可以看Github 上 Valine-Admin 文檔: https://github.com/DesertsP/Valine-Admin&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/002/9.png&quot; alt=&quot;9&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;部署-leancloud-雲引擎&quot;&gt;部署 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LeanCloud&lt;/code&gt; 雲引擎&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;雲引擎&lt;/code&gt;/&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;部署&lt;/code&gt;/&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git部署&lt;/code&gt;/&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;部署&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Git網址填上 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://github.com/DesertsP/Valine-Admin.git&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;直接按部署就好了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/002/10.png&quot; alt=&quot;10&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;alert&quot;&gt;
  這邊可以試一下回復留言，應該可以收到信了。
&lt;/div&gt;

&lt;h4 id=&quot;評論管理&quot;&gt;評論管理&lt;/h4&gt;

&lt;p&gt;要先&lt;strong&gt;註冊管理員&lt;/strong&gt;用於管理信息，註冊網址為 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://雲引擎域名.avosapps.us/sign-up&lt;/code&gt; (可以在部署狀態裡找到)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/002/11.png&quot; alt=&quot;11&quot; /&gt;&lt;/p&gt;

&lt;p&gt;註冊好之後到&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://雲引擎域名.avosapps.us/&lt;/code&gt;登入就可以管理留言了，我是覺得有點雞肋拉哈哈。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/002/12.png&quot; alt=&quot;12&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;定時自動喚醒&quot;&gt;定時自動喚醒&lt;/h4&gt;

&lt;p&gt;由於免費版的雲引擎每天最多運行 18 個小時，而且每半個小時會執行休眠策略，在休眠期間會暫停郵件通知服務，所以我們需要啟動 2 項雲函數定時任務來解決休眠時的問題:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;自動喚醒 : 每半小時執行一次喚醒以防止休眠(先要創建雲引擎域名)&lt;/li&gt;
  &lt;li&gt;漏發郵件檢查 : 每天的固定時間檢查過去 24 小時內漏發的郵件並重發&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以下是我參考AnkMak大大對雲函數的設定:&lt;/p&gt;

&lt;p&gt;選擇 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;self-wake&lt;/code&gt; 雲函數，Cron 表達式為 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0 */30 0-17 * * ?&lt;/code&gt;，表示每天 00:00 到 17:59 ，每隔 30 分鐘訪問雲引擎。(由於國際版使用 UTC-0 時間，即每天早上 8 點到 凌晨 01:59，所以最後一次執行為 01:30)&lt;/p&gt;

&lt;p&gt;選擇 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;resend-mails&lt;/code&gt; 雲函數，Cron 表達式為 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0 0 0-16 * * ?&lt;/code&gt;，表示每天 00:00 到 16:59 內，每小時一次檢查過去 24 小時內漏發的通知郵件並補發。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/002/13.png&quot; alt=&quot;13&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;leancloud-流控問題的解決方法&quot;&gt;LeanCloud 流控問題的解決方法&lt;/h4&gt;

&lt;div class=&quot;alert&quot;&gt;
  “error”:”因流控原因，通过定时任务唤醒体验版实例失败，建议升级至标准版云引擎实例避免休眠 https://url.leanapp.cn/dwAEksv”
&lt;/div&gt;

&lt;p&gt;由於官方有流量控制的問題，所以 LeanCloud 內建的定時任務只適用於當天，隔天早上起床後就會在日誌裡出現定時任務喚醒體驗版實例失敗的訊息:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/002/14.png&quot; alt=&quot;14&quot; /&gt;&lt;/p&gt;

&lt;p&gt;解決思路：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;只要當天登入過一次評論管理系統，定時任務裡的自動喚醒又會正常運作，但流控問題隔天又會發生。所以這種方法就需要每天早上手動的登錄雲引擎的後台，用來激活容器。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;所以我是使用Google的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AppScript&lt;/code&gt;寫一個腳本每30分鐘訪問一次管理介面，使用方法如下：&lt;/p&gt;

&lt;h5 id=&quot;新增appscript專案&quot;&gt;新增&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AppScript&lt;/code&gt;專案&lt;/h5&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/002/15.png&quot; alt=&quot;15&quot; /&gt;&lt;/p&gt;

&lt;p&gt;點選新專案並新增這段程式碼：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function doResponse() {

  const now_hour = new Date().getHours(); //獲取現在的時間(小時)
  
  if(now_hour &amp;gt;= 8 || now_hour &amp;lt;= 2)  //(凌晨2~8點不執行)
  {
      var response = UrlFetchApp.fetch(&apos;https://weichang.avosapps.us&apos;); //訪問後台登入頁
      Logger.log(response.getContentText());
  }
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;然後&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;部署&lt;/code&gt;/&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;新增部署作業&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/002/17.png&quot; alt=&quot;17&quot; /&gt;&lt;/p&gt;

&lt;p&gt;點旁邊鬧鐘的圖案新增觸發條件：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/002/16.png&quot; alt=&quot;16&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/002/18.png&quot; alt=&quot;18&quot; /&gt;&lt;/p&gt;

&lt;p&gt;這樣就會每半小時自動訪問一次評論管理系統了!&lt;/p&gt;

&lt;h4 id=&quot;必填欄位設定&quot;&gt;必填欄位設定&lt;/h4&gt;

&lt;p&gt;由於新增了郵件的通知功能，如果留言時不提供郵箱的話就沒用了，因此我把 NickName 和 Email 都設定為必要選項。&lt;/p&gt;

&lt;p&gt;到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_includes\_third-party\comments\valine.htm&lt;/code&gt;  (每個人的目錄位置可能不同)&lt;/p&gt;

&lt;p&gt;在括號行內加入 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;requiredFields: [&apos;nick&apos;,&apos;mail&apos;]&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;new Valine({
          el: &apos;#comments&apos;,
          app_id: &apos;JKnSyYYosilnYSK5qqBw9Ewd-MdYXbMMI&apos;,   
          app_key: &apos;nsxgeLYfEW1x8CBRdAzBbIsU&apos;, 
          placeholder:&apos;提供您的寶貴意見。&apos;,   
          serverURLs: &apos;https://jknsyyyo.api.lncldglobal.com&apos;,
          requiredFields: [&apos;nick&apos;,&apos;mail&apos;],
          verify: true
      });
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;自訂文字&quot;&gt;自訂文字&lt;/h4&gt;
&lt;p&gt;一樣到到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_includes\_third-party\comments\valine.htm&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;script&amp;gt;
	var langName = &quot;tw&quot;,
		langMode = {
			nick: &quot;NickName(必填)&quot;,
			mail: &quot;E-Mail(必填)&quot;,
			link: &quot;Website(http://)&quot;,
			nickFail: &quot;NickName cannot be less than 3 bytes.&quot;,
			mailFail: &quot;Please confirm your email address.&quot;,
			sofa: &quot;No comment yet.&quot;,
			submit: &quot;Submit&quot;,
			reply: &quot;Reply&quot;,
			cancelReply: &quot;Cancel reply&quot;,
			comments: &quot;Comments&quot;,
			cancel: &quot;Cancel&quot;,
			confirm: &quot;Confirm&quot;,
			continue: &quot;Continue&quot;,
			more: &quot;Load More...&quot;,
			preview: &quot;Preview&quot;,
			emoji: &quot;Emoji&quot;,
			expand: &quot;See more....&quot;,
			seconds: &quot;seconds ago&quot;,
			minutes: &quot;minutes ago&quot;,
			hours: &quot;hours ago&quot;,
			days: &quot;days ago&quot;,
			now: &quot;just now&quot;,
			uploading: &quot;Uploading ...&quot;,
			uploadDone: &quot;Upload completed!&quot;,
			busy: &quot;Submit is busy, please wait...&quot;,
			&quot;code-98&quot;: &quot;Valine initialization failed, please check your version of av-min.js.&quot;,
			&quot;code-99&quot;: &quot;Valine initialization failed, Please check the `el` element in the init method.&quot;,
			&quot;code-100&quot;: &quot;Valine initialization failed, Please check your appId and appKey.&quot;,
			&quot;code-140&quot;: &quot;The total number of API calls today has exceeded the development version limit.&quot;,
			&quot;code-401&quot;: &quot;Unauthorized operation, Please check your appId and appKey.&quot;,
			&quot;code-403&quot;: &quot;Access denied by API domain white list, Please check your security domain.&quot;,
		};

	new Valine({
		el: &quot;#comments&quot;,
		app_id: &quot;JKnSyYYosilnYSK5qqBw9Ewd-MdYXbMMI&quot;,
		app_key: &quot;nsxgeLYfEW1x8CBRdAzBbIsU&quot;,
		placeholder: &quot;提供您的寶貴意見。&quot;,
		serverURLs: &quot;https://jknsyyyo.api.lncldglobal.com&quot;,
		requiredFields: [&quot;nick&quot;, &quot;mail&quot;],
		lang: langName,
		langMode: langMode,
		verify: true,
	});
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;因為我覺得英文也滿好看的所以就沒改了，這邊langName不能跟預設&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;zh-CN&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;zh-TW&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;en&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ja&lt;/code&gt;的一樣。&lt;/p&gt;

&lt;p&gt;官方文檔：https://valine.js.org/i18n.html#%E8%87%AA%E5%AE%9A%E4%B9%89%E8%AF%AD%E8%A8%80&lt;/p&gt;

&lt;p&gt;效果如圖：
&lt;img src=&quot;/assets/images/002/19.png&quot; alt=&quot;19&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;頭像設定&quot;&gt;頭像設定&lt;/h4&gt;

&lt;p&gt;Valine 目前是使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Gravatar&lt;/code&gt; 作為留言板的頭像&lt;/p&gt;

&lt;p&gt;到 &lt;a href=&quot;https://en.gravatar.com&quot;&gt;Gravatar&lt;/a&gt; 官網註冊一個帳號並設定頭像，請確定自己註冊時所使用的郵箱，評論時填寫一樣的郵箱便會顯示頭像。&lt;/p&gt;

&lt;h4 id=&quot;其他用戶的頭像&quot;&gt;其他用戶的頭像&lt;/h4&gt;

&lt;p&gt;沒有自定義的郵箱，有以下 7 種默認值可選:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;參數值&lt;/th&gt;
      &lt;th&gt;頭像&lt;/th&gt;
      &lt;th&gt;說明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;空字符串’’&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/14309741/166483491-fe57a3b3-0a53-42f7-b40f-46f397de3561.png&quot; alt=&quot;&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;Gravatar 官方圖形&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;mp&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/14309741/166483577-b27986fd-e849-4a16-8127-7090bcbba86c.png&quot; alt=&quot;&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;神秘人(一個灰白頭像)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;identicon&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/14309741/166483633-47b95aaa-c335-4e8c-a7c3-50cbc4600a71.png&quot; alt=&quot;&quot; /&gt;、&lt;img src=&quot;https://user-images.githubusercontent.com/14309741/166483747-bbae3c87-37cb-4d60-9bef-61b92b2a29d1.png&quot; alt=&quot;&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;抽象幾何圖形(根據郵箱生成)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;monsterid&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/14309741/166483837-1ce5390d-cb62-4684-9c30-9c7af31db27f.png&quot; alt=&quot;&quot; /&gt;、&lt;img src=&quot;https://user-images.githubusercontent.com/14309741/166483898-a6735412-9239-4992-b4be-98b75d12b3a9.png&quot; alt=&quot;&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;小怪物(根據郵箱生成)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;wavatar&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/14309741/166483972-08031ee7-b574-4ae1-b5b4-1e897ec3c677.png&quot; alt=&quot;&quot; /&gt;、&lt;img src=&quot;https://user-images.githubusercontent.com/14309741/166484064-1de5210a-81b9-43af-ac9d-496308072694.png&quot; alt=&quot;&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;用不同面孔和背景組合生成的頭像(根據郵箱生成)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;retro&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/14309741/166484111-215d89a0-61b5-40d6-b3dd-a0c8bcc8fb83.png&quot; alt=&quot;&quot; /&gt;、&lt;img src=&quot;https://user-images.githubusercontent.com/14309741/166484166-bbd2ffa9-d6c2-430a-9df0-86896b014596.png&quot; alt=&quot;&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;八位像素復古頭像(根據郵箱生成)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;robohash&lt;/td&gt;
      &lt;td&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/14309741/166484293-8f9e1207-3ca7-435f-954d-6c98362fb44c.png&quot; alt=&quot;&quot; /&gt;&lt;/td&gt;
      &lt;td&gt;一種具有不同顏色、面部等的機器人(根據郵箱生成)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;hide&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;不顯示頭像&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;根據個人喜好選擇，這裡我自己選擇了 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;retro&lt;/code&gt; 小怪物作為其他用戶的頭像。&lt;/p&gt;

&lt;p&gt;一樣到到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_includes\_third-party\comments\valine.htm&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;在括號行內加入&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt; avatar: &apos;retro&apos;&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;new Valine({
		el: &quot;#comments&quot;,
		app_id: &quot;JKnSyYYosilnYSK5qqBw9Ewd-MdYXbMMI&quot;,
		app_key: &quot;nsxgeLYfEW1x8CBRdAzBbIsU&quot;,
		placeholder: &quot;提供您的寶貴意見。&quot;,
		serverURLs: &quot;https://jknsyyyo.api.lncldglobal.com&quot;,
		requiredFields: [&quot;nick&quot;, &quot;mail&quot;],
		lang: langName,
		langMode: langMode,
		verify: true,
        avatar: &apos;retro&apos;,
	});
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;效果如下：
&lt;img src=&quot;/assets/images/002/20.png&quot; alt=&quot;20&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;垃圾評論檢測&quot;&gt;垃圾評論檢測&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Akismet (Automattic Kismet)是應用廣泛的一個垃圾留言過濾系統，其作者是大名鼎鼎的WordPress 創始人 Matt Mullenweg，Akismet也是WordPress默認安裝的插件，其使用非常廣泛，設計目標便是幫助博客網站來過濾留言Spam。有了Akismet之後，基本上不用擔心垃圾留言的煩惱了。啟用Akismet後，當博客再收到留言會自動將其提交到Akismet並與Akismet上的黑名單進行比對，如果名列該黑名單中，則該條留言會被標記為垃圾評論且不會發布。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5 id=&quot;先到-akismet-官網httpsakismetcomdevelopment註冊一個帳號這裡我-選擇用-gravatar-的帳號登入&quot;&gt;先到 &lt;a href=&quot;https://akismet.com/development/&quot;&gt;akismet 官網(https://akismet.com/development/)&lt;/a&gt;註冊一個帳號，這裡我##### 選擇用 Gravatar 的帳號登入&lt;/h5&gt;
&lt;h5 id=&quot;選擇-developers-plan&quot;&gt;選擇 Developers Plan&lt;/h5&gt;
&lt;h5 id=&quot;取得-akismet-api-key&quot;&gt;取得 AKISMET API KEY&lt;/h5&gt;
&lt;h5 id=&quot;把-akismet-api-key-填入到-leancloud-的-akismet_key-參數裡&quot;&gt;把 AKISMET API KEY 填入到 leancloud 的 AKISMET_KEY 參數裡&lt;/h5&gt;
&lt;h5 id=&quot;重啟部署&quot;&gt;重啟部署&lt;/h5&gt;

&lt;h4 id=&quot;自定义邮件模板&quot;&gt;自定义邮件模板&lt;/h4&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;變量&lt;/th&gt;
      &lt;th&gt;範本&lt;/th&gt;
      &lt;th&gt;說明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;MAIL_SUBJECT&lt;/td&gt;
      &lt;td&gt;${PARENT_NICK}，您在 ${SITE_NAME} 上的評論收到了回覆	[可選]&lt;/td&gt;
      &lt;td&gt;@回覆時郵件標題&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MAIL_TEMPLATE&lt;/td&gt;
      &lt;td&gt;見下文	[可選]&lt;/td&gt;
      &lt;td&gt;@回覆時郵件內容&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MAIL_SUBJECT_ADMIN&lt;/td&gt;
      &lt;td&gt;${SITE_NAME} 上有新評論了	[可選]&lt;/td&gt;
      &lt;td&gt;博主通知時的郵件標題&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MAIL_TEMPLATE_ADMIN&lt;/td&gt;
      &lt;td&gt;見下文	[可選]&lt;/td&gt;
      &lt;td&gt;博主通知時郵件內容&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;郵件通知分成了兩種:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;通知博主&lt;/li&gt;
  &lt;li&gt;被@通知&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;通知博主&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;div style=&quot;border-top:2px solid #12ADDB;box-shadow:0 1px 3px #AAAAAA;line-height:180%;padding:0 15px 12px;margin:50px auto;font-size:12px;&quot;&amp;gt;&amp;lt;h2 style=&quot;border-bottom:1px solid #DDD;font-size:14px;font-weight:normal;padding:13px 0 10px 8px;&quot;&amp;gt;您在&amp;lt;a style=&quot;text-decoration:none;color: #12ADDB;&quot; href=&quot;${SITE_URL}&quot; target=&quot;_blank&quot;&amp;gt;${SITE_NAME}&amp;lt;/a&amp;gt;上的文章有了新的评论&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;${NICK}&amp;lt;/strong&amp;gt;回复说：&amp;lt;/p&amp;gt;&amp;lt;div style=&quot;background-color: #f5f5f5;padding: 10px 15px;margin:18px 0;word-wrap:break-word;&quot;&amp;gt; ${COMMENT}&amp;lt;/div&amp;gt;&amp;lt;p&amp;gt;您可以点击&amp;lt;a style=&quot;text-decoration:none; color:#12addb&quot; href=&quot;${POST_URL}&quot; target=&quot;_blank&quot;&amp;gt;查看回复的完整內容&amp;lt;/a&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;被@通知 的默認範本&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;div style=&quot;border-top:2px solid #12ADDB;box-shadow:0 1px 3px #AAAAAA;line-height:180%;padding:0 15px 12px;margin:50px auto;font-size:12px;&quot;&amp;gt;&amp;lt;h2 style=&quot;border-bottom:1px solid #DDD;font-size:14px;font-weight:normal;padding:13px 0 10px 8px;&quot;&amp;gt;您在&amp;lt;a style=&quot;text-decoration:none;color: #12ADDB;&quot; href=&quot;${SITE_URL}&quot; target=&quot;_blank&quot;&amp;gt;            ${SITE_NAME}&amp;lt;/a&amp;gt;上的评论有了新的回复&amp;lt;/h2&amp;gt; ${PARENT_NICK} 同学，您曾发表评论：&amp;lt;div style=&quot;padding:0 12px 0 12px;margin-top:18px&quot;&amp;gt;&amp;lt;div style=&quot;background-color: #f5f5f5;padding: 10px 15px;margin:18px 0;word-wrap:break-word;&quot;&amp;gt;            ${PARENT_COMMENT}&amp;lt;/div&amp;gt;&amp;lt;p&amp;gt;&amp;lt;strong&amp;gt;${NICK}&amp;lt;/strong&amp;gt;回复说：&amp;lt;/p&amp;gt;&amp;lt;div style=&quot;background-color: #f5f5f5;padding: 10px 15px;margin:18px 0;word-wrap:break-word;&quot;&amp;gt; ${COMMENT}&amp;lt;/div&amp;gt;&amp;lt;p&amp;gt;您可以点击&amp;lt;a style=&quot;text-decoration:none; color:#12addb&quot; href=&quot;${POST_URL}&quot; target=&quot;_blank&quot;&amp;gt;查看回复的完整內容&amp;lt;/a&amp;gt;，欢迎再次光临&amp;lt;a style=&quot;text-decoration:none; color:#12addb&quot; href=&quot;${SITE_URL}&quot; target=&quot;_blank&quot;&amp;gt;${SITE_NAME}&amp;lt;/a&amp;gt;。&amp;lt;br&amp;gt;&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;alert&quot;&gt;
注意，下列變數僅用於郵件範本裡的 HTML 變數中，請勿與雲引擎環境變數混淆
&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;範本裡的變數&lt;/th&gt;
      &lt;th&gt;說明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;SITE_NAME&lt;/td&gt;
      &lt;td&gt;網站名稱&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SITE_URL&lt;/td&gt;
      &lt;td&gt;網站 URL&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;POST_URL&lt;/td&gt;
      &lt;td&gt;文章 URL (完整路徑)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;PARENT_NICK&lt;/td&gt;
      &lt;td&gt;收件人名稱 (被@者、父級評論人)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;PARENT_COMMENT&lt;/td&gt;
      &lt;td&gt;父級評論內容&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;NICK&lt;/td&gt;
      &lt;td&gt;新評論者名稱&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;COMMENT&lt;/td&gt;
      &lt;td&gt;新評論內容&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;我只有把簡體換成繁體而已，我也有把專案fork下來把系統內的部分文字改成繁體的，下面這是我改的版本&lt;/p&gt;

&lt;p&gt;Git:&lt;a href=&quot;https://github.com/zwei-c/Valine-Admin&quot;&gt;https://github.com/zwei-c/Valine-Admin&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;效果如圖:
&lt;img src=&quot;/assets/images/002/21.png&quot; alt=&quot;21&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;瀏覽人數&quot;&gt;瀏覽人數&lt;/h3&gt;

&lt;p&gt;在網站上顯示瀏覽人數是以前玩無名小站覺得很酷的功能，雖然會越用越心寒==&lt;/p&gt;

&lt;p&gt;我是使用 &lt;a href=&quot;http://ibruce.info/2015/04/04/busuanzi/&quot;&gt;不蒜子&lt;/a&gt; 這個js套件：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;顯示站點總訪問量&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;span id=&quot;busuanzi_container_site_pv&quot;&amp;gt;
    本站总访问量&amp;lt;span id=&quot;busuanzi_value_site_pv&quot;&amp;gt;&amp;lt;/span&amp;gt;次
&amp;lt;/span&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;顯示單頁面訪問量&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;span id=&quot;busuanzi_container_page_pv&quot;&amp;gt;
  本文总阅读量&amp;lt;span id=&quot;busuanzi_value_page_pv&quot;&amp;gt;&amp;lt;/span&amp;gt;次
&amp;lt;/span&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;用在jekyll的方法：&lt;/p&gt;

&lt;p&gt;我是放在側邊攔所以直接到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_includes/_custom/sidebar.html&lt;/code&gt;&lt;strong&gt;(不同模板位置可能不同)&lt;/strong&gt;新增&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;script async src=&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&amp;gt;&amp;lt;/script&amp;gt;

本站總訪問量&amp;lt;span id=&quot;busuanzi_value_site_pv&quot;&amp;gt;&amp;lt;/span&amp;gt;次. &amp;lt;br&amp;gt;
本站總訪問人數&amp;lt;span id=&quot;busuanzi_value_site_uv&quot;&amp;gt;&amp;lt;/span&amp;gt;位. &amp;lt;br&amp;gt;
本頁面訪問次數&amp;lt;span id=&quot;busuanzi_value_page_pv&quot;&amp;gt;&amp;lt;/span&amp;gt;次.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;效果如圖:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/002/22.png&quot; alt=&quot;22&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;結論&quot;&gt;結論&lt;/h1&gt;

&lt;p&gt;jekyll這部分的功能更新應該暫時告一段落，先記錄一下待完成(&lt;del&gt;這次搞不定的東西&lt;/del&gt;)的項目：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Appscript沒辦法設定某個時段不跑，這樣會導致某些時間會出現流控問題。&lt;/li&gt;
  &lt;li&gt;文章區分享按鈕&lt;/li&gt;
  &lt;li&gt;訂閱按鈕&lt;/li&gt;
  &lt;li&gt;待補充…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;再來要感謝辛西亞大大、AnkMar大大提供思路跟很完整的實作經驗，其實本篇文章寫的內容基本上都是兩位大大的經驗，我只是將我本身的實作過程記錄下來並加上一些我在實作過程中遇到的bug解決方法，老實說架設網站不難，但是寫網誌真的好難。看起來只要把步驟貼到文章上面就好了，但實際在寫的時候發現有時一些參數或函數、工具的用法說明，說明文件或是前人的文章已經寫得夠好了，搞得我只能把別人的東西Copy&amp;amp;Paste到自己的文章上，有點怪不好意思的。&lt;/p&gt;

&lt;h1 id=&quot;參考資料&quot;&gt;參考資料&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://ankmak.com/tech/2021/03/11/use-valine-as-comments-in-jekyll.html&quot;&gt;在 Jekyll 上使用 Valine 作為評論系統/留言版&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ankmak.com/tech/2022/05/04/valine-admin-setting-and-comments-notification-from-email.html&quot;&gt;Valine Admin 配置教學 - 設定 Valine 作為評論區/留言版並透過 Email 取得留言通知&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://busuanzi.ibruce.info/&quot;&gt;不蒜子&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://valine.js.org/&quot;&gt;Valine&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/DesertsP/Valine-Admin&quot;&gt;Valine-Admin&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cynthiachuang.github.io/Add-Post-Copyright/&quot;&gt;【種樹】新增版權訊息&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cynthiachuang.github.io/Copy-Text-to-Clipboard-and-Append-Source-Hyperlink/&quot;&gt;【種樹】複製網頁文字時，加上網站的作者與網址&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.heson10.com/posts/28396.html&quot;&gt;所有关于Valine评论系统的配置都在这里【合集】&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/jiunian_2761/article/details/97388997&quot;&gt;Hexo博客进阶：为Next主题添加Valine评论系统&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Wei Chang</name></author><category term="前端" /><category term="jekyll" /><category term="Valine" /><category term="App Script" /><summary type="html">前言 續昨天 建置jekyll+Github Page完成基本設定後，我又參考Ank’s Blog、辛西亞的技能樹等大大的網誌內的教學文，新增一些功能到我的網誌內，讓功能更完善一些。</summary></entry><entry><title type="html">建置jekyll+Github Page</title><link href="http://localhost:4000/%E5%89%8D%E7%AB%AF/2022/07/04/001-build/" rel="alternate" type="text/html" title="建置jekyll+Github Page" /><published>2022-07-04T00:00:00+08:00</published><updated>2022-07-04T00:00:00+08:00</updated><id>http://localhost:4000/%E5%89%8D%E7%AB%AF/2022/07/04/001-build</id><content type="html" xml:base="http://localhost:4000/%E5%89%8D%E7%AB%AF/2022/07/04/001-build/">&lt;hr /&gt;
&lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;
&lt;p&gt;原本想在將自己遇到的問題或一些程式、讀書心得寫在Blogger裡面，但都要去web上面寫文章。第一不夠酷，第二則覺得有點麻煩。所以藉著有GitHub pages這個service可以用的機會將做一個個人網站這個放在心裡很久的想法實現。&lt;/p&gt;

&lt;!-- more --&gt;
&lt;h1 id=&quot;使用的工具&quot;&gt;使用的工具&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;GitHub pages&lt;/li&gt;
  &lt;li&gt;Jekyll&lt;/li&gt;
  &lt;li&gt;PowerShell&lt;/li&gt;
  &lt;li&gt;VSCode&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;環境&quot;&gt;環境&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;Windows 10&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;github-pages&quot;&gt;GitHub pages&lt;/h1&gt;
&lt;p&gt;其實我本身寫的code跟上班寫的code都是放在GitLab上，但當我看到GitLab pages的時候已經把這個網站架好了所以沒什麼意外的話應該會繼續使用GitHub pages來當我的個人web site。&lt;/p&gt;

&lt;p&gt;關於GitHub pages其實網路上的教學很多而且都寫得很清楚，所以除了基本的作業流程另外補充一下我自己遇到的問題。&lt;/p&gt;

&lt;h2 id=&quot;initialization&quot;&gt;initialization&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;需要的東西
    &lt;ul&gt;
      &lt;li&gt;GitHub帳號&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;新增名為「username.github.io」的專案，這個 username 指的是自己的 GitHub 帳號。這不僅是你的專案名稱，也是你的 blog 網址。專案成立後，按照 Quick setup 的提示準備好專案的資料夾。&lt;img src=&quot;/assets/images/001/1.png&quot; alt=&quot;1&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Clone下來到本地資料夾，這邊可以先照著GitHub pages 上面的教學create一個index.html然後推上去連接到自己的網站上面看看效果 :)&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;alert&quot;&gt;
  提交之後要過兩三分鐘才會顯示出來，所以不要緊張
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/001/2.png&quot; alt=&quot;2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;到這邊之後GitHub pages基本已經建置完成。如果你有匠人精神可以直接在這邊手刻CSS跟HTML來做網頁，但小弟不才又懶所以接著要使用Jekyll來繼續佈置網站。&lt;/p&gt;

&lt;hr /&gt;
&lt;h1 id=&quot;jekyll&quot;&gt;Jekyll&lt;/h1&gt;

&lt;p&gt;Jekyll 是 Ruby 所編寫出來的 framework，因此在安裝 Jekyll 之前要先安裝Ruby。&lt;/p&gt;

&lt;h2 id=&quot;基本安裝&quot;&gt;基本安裝&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://rubyinstaller.org/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;我是選擇當前最新版本&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ruby+Devkit 3.1.2-1 (x64)&lt;/code&gt;來進行安裝&lt;/p&gt;

&lt;p&gt;根據Jekyll官方文件所述，要使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WITH DEVKIT&lt;/code&gt;的版本來裝。之前沒有仔細看文件直接裝了&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WITHOUT DEVKIT&lt;/code&gt;版本導致後面在裝&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MINGGW&lt;/code&gt;的時候出現一堆error = =&lt;/p&gt;

&lt;p&gt;安裝完成之後直接勾選  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Run &apos;ridk install&apos; to set up MSYS2 ...&lt;/code&gt;。
&lt;img src=&quot;/assets/images/001/4.png&quot; alt=&quot;4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;接著會自動在terminal開啟ruby安裝的介面，這邊他已經幫你key in好選項 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1 3&lt;/code&gt;直接按enter來安裝就好了
&lt;img src=&quot;/assets/images/001/5.png&quot; alt=&quot;5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;看到 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Install MSYS2 and MINGW development toolchain succeeded&lt;/code&gt;就代表安裝好了!&lt;/p&gt;

&lt;p&gt;再來在執行&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem install jekyll bundler
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;接下來將專案（e.g. myblog 資料夾）設為 Jekyll 的網站，由於我的專案中已經存在些檔案，所以我在指令的後面加上 force 避免覆蓋。網站設置完時，它會動配置一組預設主題 - minima。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jekyll new myblog  --force 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;到此網站就算建立完成了，若想在上線前預覽建置的結果，可先進入專案進行編譯。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd myblog
jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;編譯結果可在瀏覽器輸入 http://localhost:4000 後查看。若可以順利執行，就將這次的 diff 進行 commit 後送上 github了。&lt;/p&gt;

&lt;p&gt;在這邊我遇到一個BUG&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cannot load such file -- webrick (LoadError)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;根據官方的項目的說明：&lt;/p&gt;

&lt;p&gt;這是因為：
從 Ruby 3.0 開始 webrick 已經不在綁定到 Ruby 中了，&lt;/p&gt;

&lt;p&gt;webrick 需要手動進行添加。&lt;/p&gt;

&lt;p&gt;添加的指令為：&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle add webrick
bundle install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;後就可以解決這個問題了。&lt;/p&gt;

&lt;h2 id=&quot;主題更換&quot;&gt;主題更換&lt;/h2&gt;

&lt;h3 id=&quot;挑選主題&quot;&gt;挑選主題&lt;/h3&gt;

&lt;p&gt;網路上搜尋jekyll theme就有很多網站供應jekyll的模板了，我是使用&lt;a href=&quot;http://theme-next.simpleyyt.com/getting-started.html&quot;&gt;jekyll-theme-next&lt;/a&gt;- &lt;a href=&quot;https://simpleyyt.com/jekyll-theme-next/&quot;&gt;demo&lt;/a&gt;這個主題，照著他的步驟：&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/Simpleyyt/jekyll-theme-next.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;我自己是把&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll-theme-next&lt;/code&gt;這個資料夾內除了.git相關的檔案移到剛剛建立的my-blog資料夾內，並刪除&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Gemfile.lock&lt;/code&gt;後執行&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在run&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle exec jekyll server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;這個時候用瀏覽器訪問&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;localhost:4000&lt;/code&gt;就可以看到&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/001/6.png&quot; alt=&quot;6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;但是看terminal上面會有&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GitHub Metadata: No GitHub API authentication could be found&lt;/code&gt;這個報錯，原因很複雜可以自己去估狗一下XD。有個簡單的方法可以解決，到&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;中找到&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;description&lt;/code&gt;給他填上值就OK了!&lt;/p&gt;

&lt;h2 id=&quot;撰寫文章&quot;&gt;撰寫文章&lt;/h2&gt;

&lt;p&gt;終於把環境弄好了，接著可以看該模板內的_posts這個資料夾內的MD檔，把MD檔丟進去jekyll就會把它變成html然後顯示到你的網站上面了，只是要注意MD檔的格式一定要是&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YYYY-MM-DD-name.md&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;並且MD檔的開頭必須是：&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
title: 文章標題
date: 2022-07-04
categories:
- 他可以
tags:
- 穿過
- 我的
- 巴巴
--- 

// 以下開始撰寫你的文章
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;根據我參考的這篇作者表示，不同的模板可能有不同的規範，這部分如果使用不同模板的同學自己留意一下。&lt;/p&gt;

&lt;h1 id=&quot;總結&quot;&gt;總結&lt;/h1&gt;
&lt;p&gt;整個網站包含查資料跟寫這篇文章的時間大概花了4-5小時，但真正build網站大概只花了30分鐘，使用GitHub pages跟jekyll來建置個人網站真的很快又很簡單XD，希望之後有毅力能持續的更新這個網站!&lt;/p&gt;

&lt;h1 id=&quot;參考資料&quot;&gt;參考資料&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://cynthiachuang.github.io/Setting-Up-a-GitHub-Pages-Site-with-Jekyll/&quot;&gt;辛西亞的技能樹- 【種樹】使用 Jekyll 和搭建 Github Pages&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://theme-next.simpleyyt.com/getting-started.html&quot;&gt;NexT使用文檔&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/huyuchengus/p/15473035.html&quot;&gt;Jekyll 运行的时候提示错误 cannot load such file – webrick (LoadError)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jekyllrb.com/&quot;&gt;jekyll官方文檔&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://giselle527.github.io/2018/02/12/problems&quot;&gt;見字如畫 - githubPages+jekyll搭建博客和使用jekyll模板&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/pfysw/article/details/109247846&quot;&gt;搭建msys2基礎開發平台&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Wei Chang</name></author><category term="前端" /><category term="jekyll" /><category term="github" /><category term="ruby" /><summary type="html">前言 原本想在將自己遇到的問題或一些程式、讀書心得寫在Blogger裡面，但都要去web上面寫文章。第一不夠酷，第二則覺得有點麻煩。所以藉著有GitHub pages這個service可以用的機會將做一個個人網站這個放在心裡很久的想法實現。</summary></entry></feed>